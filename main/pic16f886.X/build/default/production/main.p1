Version 3.2 HI-TECH Software Intermediate Code
"1548 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[s S59 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S59 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1547
[u S58 `S59 1 ]
[n S58 . . ]
"1558
[v _PIE1bits `VS58 ~T0 @X0 0 e@140 ]
"2402
[s S95 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S95 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"2412
[s S96 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S96 . TXD8 . nTX8 ]
"2417
[s S97 :6 `uc 1 :1 `uc 1 ]
[n S97 . . TX8_9 ]
"2401
[u S94 `S95 1 `S96 1 `S97 1 ]
[n S94 . . . . ]
"2422
[v _TXSTAbits `VS94 ~T0 @X0 0 e@152 ]
"3181
[s S127 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S127 . ABDEN WUE . BRG16 SCKP . RCIDL ABDOVF ]
"3180
[u S126 `S127 1 ]
[n S126 . . ]
"3192
[v _BAUDCTLbits `VS126 ~T0 @X0 0 e@391 ]
"2544
[v _SPBRGH `Vuc ~T0 @X0 0 e@154 ]
"2482
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"963
[s S35 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S35 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"973
[s S36 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S36 . RCD8 . RC9 ]
"978
[s S37 :6 `uc 1 :1 `uc 1 ]
[n S37 . . nRC8 ]
"982
[s S38 :6 `uc 1 :1 `uc 1 ]
[n S38 . . RC8_9 ]
"962
[u S34 `S35 1 `S36 1 `S37 1 `S38 1 ]
[n S34 . . . . . ]
"987
[v _RCSTAbits `VS34 ~T0 @X0 0 e@24 ]
"462
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"461
[u S16 `S17 1 ]
[n S16 . . ]
"472
[v _PIR1bits `VS16 ~T0 @X0 0 e@12 ]
"1052
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"1881
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"691
[v _T2CON `Vuc ~T0 @X0 0 e@18 ]
"3097
[v _EEADR `Vuc ~T0 @X0 0 e@269 ]
"3090
[v _EEDAT `Vuc ~T0 @X0 0 e@268 ]
"3327
[s S133 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S133 . RD WR WREN WRERR . EEPGD ]
"3326
[u S132 `S133 1 ]
[n S132 . . ]
"3336
[v _EECON1bits `VS132 ~T0 @X0 0 e@396 ]
"3366
[v _EECON2 `Vuc ~T0 @X0 0 e@397 ]
"518
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . CCP2IF . ULPWUIF BCLIF EEIF C1IF C2IF OSFIF ]
"517
[u S18 `S19 1 ]
[n S18 . . ]
"529
[v _PIR2bits `VS18 ~T0 @X0 0 e@13 ]
"294
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"293
[u S9 `S10 1 ]
[n S9 . . ]
"305
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
"226
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"170
[s S6 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S6 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"169
[u S5 `S6 1 ]
[n S5 . . ]
"181
[v _PORTAbits `VS5 ~T0 @X0 0 e@5 ]
"164
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"1059
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"195 C:\Program Files (x86)\Microchip\xc8\v1.45\include\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
[v F1552 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic.h
[v __delay `JF1552 ~T0 @X0 0 e ]
[p i __delay ]
[p mainexit ]
"1702 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[v _OSCCON `Vuc ~T0 @X0 0 e@143 ]
"378
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"3271
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"3227
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"1335
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1397
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1459
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f886.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f886.h
[; ;pic16f886.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f886.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f886.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f886.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f886.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f886.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f886.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f886.h: 76: typedef union {
[; ;pic16f886.h: 77: struct {
[; ;pic16f886.h: 78: unsigned C :1;
[; ;pic16f886.h: 79: unsigned DC :1;
[; ;pic16f886.h: 80: unsigned Z :1;
[; ;pic16f886.h: 81: unsigned nPD :1;
[; ;pic16f886.h: 82: unsigned nTO :1;
[; ;pic16f886.h: 83: unsigned RP :2;
[; ;pic16f886.h: 84: unsigned IRP :1;
[; ;pic16f886.h: 85: };
[; ;pic16f886.h: 86: struct {
[; ;pic16f886.h: 87: unsigned :5;
[; ;pic16f886.h: 88: unsigned RP0 :1;
[; ;pic16f886.h: 89: unsigned RP1 :1;
[; ;pic16f886.h: 90: };
[; ;pic16f886.h: 91: struct {
[; ;pic16f886.h: 92: unsigned CARRY :1;
[; ;pic16f886.h: 93: unsigned :1;
[; ;pic16f886.h: 94: unsigned ZERO :1;
[; ;pic16f886.h: 95: };
[; ;pic16f886.h: 96: } STATUSbits_t;
[; ;pic16f886.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f886.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f886.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f886.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f886.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f886.h: 169: typedef union {
[; ;pic16f886.h: 170: struct {
[; ;pic16f886.h: 171: unsigned RA0 :1;
[; ;pic16f886.h: 172: unsigned RA1 :1;
[; ;pic16f886.h: 173: unsigned RA2 :1;
[; ;pic16f886.h: 174: unsigned RA3 :1;
[; ;pic16f886.h: 175: unsigned RA4 :1;
[; ;pic16f886.h: 176: unsigned RA5 :1;
[; ;pic16f886.h: 177: unsigned RA6 :1;
[; ;pic16f886.h: 178: unsigned RA7 :1;
[; ;pic16f886.h: 179: };
[; ;pic16f886.h: 180: } PORTAbits_t;
[; ;pic16f886.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f886.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f886.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f886.h: 231: typedef union {
[; ;pic16f886.h: 232: struct {
[; ;pic16f886.h: 233: unsigned RB0 :1;
[; ;pic16f886.h: 234: unsigned RB1 :1;
[; ;pic16f886.h: 235: unsigned RB2 :1;
[; ;pic16f886.h: 236: unsigned RB3 :1;
[; ;pic16f886.h: 237: unsigned RB4 :1;
[; ;pic16f886.h: 238: unsigned RB5 :1;
[; ;pic16f886.h: 239: unsigned RB6 :1;
[; ;pic16f886.h: 240: unsigned RB7 :1;
[; ;pic16f886.h: 241: };
[; ;pic16f886.h: 242: } PORTBbits_t;
[; ;pic16f886.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f886.h: 288: extern volatile unsigned char PORTC @ 0x007;
"290
[; ;pic16f886.h: 290: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f886.h: 293: typedef union {
[; ;pic16f886.h: 294: struct {
[; ;pic16f886.h: 295: unsigned RC0 :1;
[; ;pic16f886.h: 296: unsigned RC1 :1;
[; ;pic16f886.h: 297: unsigned RC2 :1;
[; ;pic16f886.h: 298: unsigned RC3 :1;
[; ;pic16f886.h: 299: unsigned RC4 :1;
[; ;pic16f886.h: 300: unsigned RC5 :1;
[; ;pic16f886.h: 301: unsigned RC6 :1;
[; ;pic16f886.h: 302: unsigned RC7 :1;
[; ;pic16f886.h: 303: };
[; ;pic16f886.h: 304: } PORTCbits_t;
[; ;pic16f886.h: 305: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f886.h: 350: extern volatile unsigned char PORTE @ 0x009;
"352
[; ;pic16f886.h: 352: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f886.h: 355: typedef union {
[; ;pic16f886.h: 356: struct {
[; ;pic16f886.h: 357: unsigned :3;
[; ;pic16f886.h: 358: unsigned RE3 :1;
[; ;pic16f886.h: 359: };
[; ;pic16f886.h: 360: } PORTEbits_t;
[; ;pic16f886.h: 361: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f886.h: 371: extern volatile unsigned char PCLATH @ 0x00A;
"373
[; ;pic16f886.h: 373: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f886.h: 378: extern volatile unsigned char INTCON @ 0x00B;
"380
[; ;pic16f886.h: 380: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f886.h: 383: typedef union {
[; ;pic16f886.h: 384: struct {
[; ;pic16f886.h: 385: unsigned RBIF :1;
[; ;pic16f886.h: 386: unsigned INTF :1;
[; ;pic16f886.h: 387: unsigned T0IF :1;
[; ;pic16f886.h: 388: unsigned RBIE :1;
[; ;pic16f886.h: 389: unsigned INTE :1;
[; ;pic16f886.h: 390: unsigned T0IE :1;
[; ;pic16f886.h: 391: unsigned PEIE :1;
[; ;pic16f886.h: 392: unsigned GIE :1;
[; ;pic16f886.h: 393: };
[; ;pic16f886.h: 394: struct {
[; ;pic16f886.h: 395: unsigned :2;
[; ;pic16f886.h: 396: unsigned TMR0IF :1;
[; ;pic16f886.h: 397: unsigned :2;
[; ;pic16f886.h: 398: unsigned TMR0IE :1;
[; ;pic16f886.h: 399: };
[; ;pic16f886.h: 400: } INTCONbits_t;
[; ;pic16f886.h: 401: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f886.h: 456: extern volatile unsigned char PIR1 @ 0x00C;
"458
[; ;pic16f886.h: 458: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f886.h: 461: typedef union {
[; ;pic16f886.h: 462: struct {
[; ;pic16f886.h: 463: unsigned TMR1IF :1;
[; ;pic16f886.h: 464: unsigned TMR2IF :1;
[; ;pic16f886.h: 465: unsigned CCP1IF :1;
[; ;pic16f886.h: 466: unsigned SSPIF :1;
[; ;pic16f886.h: 467: unsigned TXIF :1;
[; ;pic16f886.h: 468: unsigned RCIF :1;
[; ;pic16f886.h: 469: unsigned ADIF :1;
[; ;pic16f886.h: 470: };
[; ;pic16f886.h: 471: } PIR1bits_t;
[; ;pic16f886.h: 472: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f886.h: 512: extern volatile unsigned char PIR2 @ 0x00D;
"514
[; ;pic16f886.h: 514: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f886.h: 517: typedef union {
[; ;pic16f886.h: 518: struct {
[; ;pic16f886.h: 519: unsigned CCP2IF :1;
[; ;pic16f886.h: 520: unsigned :1;
[; ;pic16f886.h: 521: unsigned ULPWUIF :1;
[; ;pic16f886.h: 522: unsigned BCLIF :1;
[; ;pic16f886.h: 523: unsigned EEIF :1;
[; ;pic16f886.h: 524: unsigned C1IF :1;
[; ;pic16f886.h: 525: unsigned C2IF :1;
[; ;pic16f886.h: 526: unsigned OSFIF :1;
[; ;pic16f886.h: 527: };
[; ;pic16f886.h: 528: } PIR2bits_t;
[; ;pic16f886.h: 529: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f886.h: 569: extern volatile unsigned short TMR1 @ 0x00E;
"571
[; ;pic16f886.h: 571: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f886.h: 576: extern volatile unsigned char TMR1L @ 0x00E;
"578
[; ;pic16f886.h: 578: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f886.h: 583: extern volatile unsigned char TMR1H @ 0x00F;
"585
[; ;pic16f886.h: 585: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f886.h: 590: extern volatile unsigned char T1CON @ 0x010;
"592
[; ;pic16f886.h: 592: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f886.h: 595: typedef union {
[; ;pic16f886.h: 596: struct {
[; ;pic16f886.h: 597: unsigned TMR1ON :1;
[; ;pic16f886.h: 598: unsigned TMR1CS :1;
[; ;pic16f886.h: 599: unsigned nT1SYNC :1;
[; ;pic16f886.h: 600: unsigned T1OSCEN :1;
[; ;pic16f886.h: 601: unsigned T1CKPS :2;
[; ;pic16f886.h: 602: unsigned TMR1GE :1;
[; ;pic16f886.h: 603: unsigned T1GINV :1;
[; ;pic16f886.h: 604: };
[; ;pic16f886.h: 605: struct {
[; ;pic16f886.h: 606: unsigned :2;
[; ;pic16f886.h: 607: unsigned T1INSYNC :1;
[; ;pic16f886.h: 608: unsigned :1;
[; ;pic16f886.h: 609: unsigned T1CKPS0 :1;
[; ;pic16f886.h: 610: unsigned T1CKPS1 :1;
[; ;pic16f886.h: 611: unsigned :1;
[; ;pic16f886.h: 612: unsigned T1GIV :1;
[; ;pic16f886.h: 613: };
[; ;pic16f886.h: 614: struct {
[; ;pic16f886.h: 615: unsigned :2;
[; ;pic16f886.h: 616: unsigned T1SYNC :1;
[; ;pic16f886.h: 617: };
[; ;pic16f886.h: 618: } T1CONbits_t;
[; ;pic16f886.h: 619: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f886.h: 684: extern volatile unsigned char TMR2 @ 0x011;
"686
[; ;pic16f886.h: 686: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f886.h: 691: extern volatile unsigned char T2CON @ 0x012;
"693
[; ;pic16f886.h: 693: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f886.h: 696: typedef union {
[; ;pic16f886.h: 697: struct {
[; ;pic16f886.h: 698: unsigned T2CKPS :2;
[; ;pic16f886.h: 699: unsigned TMR2ON :1;
[; ;pic16f886.h: 700: unsigned TOUTPS :4;
[; ;pic16f886.h: 701: };
[; ;pic16f886.h: 702: struct {
[; ;pic16f886.h: 703: unsigned T2CKPS0 :1;
[; ;pic16f886.h: 704: unsigned T2CKPS1 :1;
[; ;pic16f886.h: 705: unsigned :1;
[; ;pic16f886.h: 706: unsigned TOUTPS0 :1;
[; ;pic16f886.h: 707: unsigned TOUTPS1 :1;
[; ;pic16f886.h: 708: unsigned TOUTPS2 :1;
[; ;pic16f886.h: 709: unsigned TOUTPS3 :1;
[; ;pic16f886.h: 710: };
[; ;pic16f886.h: 711: } T2CONbits_t;
[; ;pic16f886.h: 712: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f886.h: 762: extern volatile unsigned char SSPBUF @ 0x013;
"764
[; ;pic16f886.h: 764: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f886.h: 769: extern volatile unsigned char SSPCON @ 0x014;
"771
[; ;pic16f886.h: 771: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f886.h: 774: typedef union {
[; ;pic16f886.h: 775: struct {
[; ;pic16f886.h: 776: unsigned SSPM :4;
[; ;pic16f886.h: 777: unsigned CKP :1;
[; ;pic16f886.h: 778: unsigned SSPEN :1;
[; ;pic16f886.h: 779: unsigned SSPOV :1;
[; ;pic16f886.h: 780: unsigned WCOL :1;
[; ;pic16f886.h: 781: };
[; ;pic16f886.h: 782: struct {
[; ;pic16f886.h: 783: unsigned SSPM0 :1;
[; ;pic16f886.h: 784: unsigned SSPM1 :1;
[; ;pic16f886.h: 785: unsigned SSPM2 :1;
[; ;pic16f886.h: 786: unsigned SSPM3 :1;
[; ;pic16f886.h: 787: };
[; ;pic16f886.h: 788: } SSPCONbits_t;
[; ;pic16f886.h: 789: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f886.h: 839: extern volatile unsigned short CCPR1 @ 0x015;
"841
[; ;pic16f886.h: 841: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f886.h: 846: extern volatile unsigned char CCPR1L @ 0x015;
"848
[; ;pic16f886.h: 848: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f886.h: 853: extern volatile unsigned char CCPR1H @ 0x016;
"855
[; ;pic16f886.h: 855: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f886.h: 860: extern volatile unsigned char CCP1CON @ 0x017;
"862
[; ;pic16f886.h: 862: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f886.h: 865: typedef union {
[; ;pic16f886.h: 866: struct {
[; ;pic16f886.h: 867: unsigned CCP1M :4;
[; ;pic16f886.h: 868: unsigned DC1B :2;
[; ;pic16f886.h: 869: unsigned P1M :2;
[; ;pic16f886.h: 870: };
[; ;pic16f886.h: 871: struct {
[; ;pic16f886.h: 872: unsigned CCP1M0 :1;
[; ;pic16f886.h: 873: unsigned CCP1M1 :1;
[; ;pic16f886.h: 874: unsigned CCP1M2 :1;
[; ;pic16f886.h: 875: unsigned CCP1M3 :1;
[; ;pic16f886.h: 876: unsigned DC1B0 :1;
[; ;pic16f886.h: 877: unsigned DC1B1 :1;
[; ;pic16f886.h: 878: unsigned P1M0 :1;
[; ;pic16f886.h: 879: unsigned P1M1 :1;
[; ;pic16f886.h: 880: };
[; ;pic16f886.h: 881: struct {
[; ;pic16f886.h: 882: unsigned :4;
[; ;pic16f886.h: 883: unsigned CCP1Y :1;
[; ;pic16f886.h: 884: unsigned CCP1X :1;
[; ;pic16f886.h: 885: };
[; ;pic16f886.h: 886: } CCP1CONbits_t;
[; ;pic16f886.h: 887: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f886.h: 957: extern volatile unsigned char RCSTA @ 0x018;
"959
[; ;pic16f886.h: 959: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f886.h: 962: typedef union {
[; ;pic16f886.h: 963: struct {
[; ;pic16f886.h: 964: unsigned RX9D :1;
[; ;pic16f886.h: 965: unsigned OERR :1;
[; ;pic16f886.h: 966: unsigned FERR :1;
[; ;pic16f886.h: 967: unsigned ADDEN :1;
[; ;pic16f886.h: 968: unsigned CREN :1;
[; ;pic16f886.h: 969: unsigned SREN :1;
[; ;pic16f886.h: 970: unsigned RX9 :1;
[; ;pic16f886.h: 971: unsigned SPEN :1;
[; ;pic16f886.h: 972: };
[; ;pic16f886.h: 973: struct {
[; ;pic16f886.h: 974: unsigned RCD8 :1;
[; ;pic16f886.h: 975: unsigned :5;
[; ;pic16f886.h: 976: unsigned RC9 :1;
[; ;pic16f886.h: 977: };
[; ;pic16f886.h: 978: struct {
[; ;pic16f886.h: 979: unsigned :6;
[; ;pic16f886.h: 980: unsigned nRC8 :1;
[; ;pic16f886.h: 981: };
[; ;pic16f886.h: 982: struct {
[; ;pic16f886.h: 983: unsigned :6;
[; ;pic16f886.h: 984: unsigned RC8_9 :1;
[; ;pic16f886.h: 985: };
[; ;pic16f886.h: 986: } RCSTAbits_t;
[; ;pic16f886.h: 987: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f886.h: 1052: extern volatile unsigned char TXREG @ 0x019;
"1054
[; ;pic16f886.h: 1054: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f886.h: 1059: extern volatile unsigned char RCREG @ 0x01A;
"1061
[; ;pic16f886.h: 1061: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f886.h: 1066: extern volatile unsigned short CCPR2 @ 0x01B;
"1068
[; ;pic16f886.h: 1068: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f886.h: 1073: extern volatile unsigned char CCPR2L @ 0x01B;
"1075
[; ;pic16f886.h: 1075: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f886.h: 1080: extern volatile unsigned char CCPR2H @ 0x01C;
"1082
[; ;pic16f886.h: 1082: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f886.h: 1087: extern volatile unsigned char CCP2CON @ 0x01D;
"1089
[; ;pic16f886.h: 1089: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f886.h: 1092: typedef union {
[; ;pic16f886.h: 1093: struct {
[; ;pic16f886.h: 1094: unsigned CCP2M :4;
[; ;pic16f886.h: 1095: unsigned DC2B0 :1;
[; ;pic16f886.h: 1096: unsigned DC2B1 :1;
[; ;pic16f886.h: 1097: };
[; ;pic16f886.h: 1098: struct {
[; ;pic16f886.h: 1099: unsigned CCP2M0 :1;
[; ;pic16f886.h: 1100: unsigned CCP2M1 :1;
[; ;pic16f886.h: 1101: unsigned CCP2M2 :1;
[; ;pic16f886.h: 1102: unsigned CCP2M3 :1;
[; ;pic16f886.h: 1103: unsigned CCP2Y :1;
[; ;pic16f886.h: 1104: unsigned CCP2X :1;
[; ;pic16f886.h: 1105: };
[; ;pic16f886.h: 1106: } CCP2CONbits_t;
[; ;pic16f886.h: 1107: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f886.h: 1157: extern volatile unsigned char ADRESH @ 0x01E;
"1159
[; ;pic16f886.h: 1159: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f886.h: 1164: extern volatile unsigned char ADCON0 @ 0x01F;
"1166
[; ;pic16f886.h: 1166: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f886.h: 1169: typedef union {
[; ;pic16f886.h: 1170: struct {
[; ;pic16f886.h: 1171: unsigned ADON :1;
[; ;pic16f886.h: 1172: unsigned GO_nDONE :1;
[; ;pic16f886.h: 1173: unsigned CHS :4;
[; ;pic16f886.h: 1174: unsigned ADCS :2;
[; ;pic16f886.h: 1175: };
[; ;pic16f886.h: 1176: struct {
[; ;pic16f886.h: 1177: unsigned :1;
[; ;pic16f886.h: 1178: unsigned GO :1;
[; ;pic16f886.h: 1179: unsigned CHS0 :1;
[; ;pic16f886.h: 1180: unsigned CHS1 :1;
[; ;pic16f886.h: 1181: unsigned CHS2 :1;
[; ;pic16f886.h: 1182: unsigned CHS3 :1;
[; ;pic16f886.h: 1183: unsigned ADCS0 :1;
[; ;pic16f886.h: 1184: unsigned ADCS1 :1;
[; ;pic16f886.h: 1185: };
[; ;pic16f886.h: 1186: struct {
[; ;pic16f886.h: 1187: unsigned :1;
[; ;pic16f886.h: 1188: unsigned nDONE :1;
[; ;pic16f886.h: 1189: };
[; ;pic16f886.h: 1190: struct {
[; ;pic16f886.h: 1191: unsigned :1;
[; ;pic16f886.h: 1192: unsigned GO_DONE :1;
[; ;pic16f886.h: 1193: };
[; ;pic16f886.h: 1194: } ADCON0bits_t;
[; ;pic16f886.h: 1195: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f886.h: 1265: extern volatile unsigned char OPTION_REG @ 0x081;
"1267
[; ;pic16f886.h: 1267: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f886.h: 1270: typedef union {
[; ;pic16f886.h: 1271: struct {
[; ;pic16f886.h: 1272: unsigned PS :3;
[; ;pic16f886.h: 1273: unsigned PSA :1;
[; ;pic16f886.h: 1274: unsigned T0SE :1;
[; ;pic16f886.h: 1275: unsigned T0CS :1;
[; ;pic16f886.h: 1276: unsigned INTEDG :1;
[; ;pic16f886.h: 1277: unsigned nRBPU :1;
[; ;pic16f886.h: 1278: };
[; ;pic16f886.h: 1279: struct {
[; ;pic16f886.h: 1280: unsigned PS0 :1;
[; ;pic16f886.h: 1281: unsigned PS1 :1;
[; ;pic16f886.h: 1282: unsigned PS2 :1;
[; ;pic16f886.h: 1283: };
[; ;pic16f886.h: 1284: } OPTION_REGbits_t;
[; ;pic16f886.h: 1285: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f886.h: 1335: extern volatile unsigned char TRISA @ 0x085;
"1337
[; ;pic16f886.h: 1337: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f886.h: 1340: typedef union {
[; ;pic16f886.h: 1341: struct {
[; ;pic16f886.h: 1342: unsigned TRISA0 :1;
[; ;pic16f886.h: 1343: unsigned TRISA1 :1;
[; ;pic16f886.h: 1344: unsigned TRISA2 :1;
[; ;pic16f886.h: 1345: unsigned TRISA3 :1;
[; ;pic16f886.h: 1346: unsigned TRISA4 :1;
[; ;pic16f886.h: 1347: unsigned TRISA5 :1;
[; ;pic16f886.h: 1348: unsigned TRISA6 :1;
[; ;pic16f886.h: 1349: unsigned TRISA7 :1;
[; ;pic16f886.h: 1350: };
[; ;pic16f886.h: 1351: } TRISAbits_t;
[; ;pic16f886.h: 1352: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f886.h: 1397: extern volatile unsigned char TRISB @ 0x086;
"1399
[; ;pic16f886.h: 1399: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f886.h: 1402: typedef union {
[; ;pic16f886.h: 1403: struct {
[; ;pic16f886.h: 1404: unsigned TRISB0 :1;
[; ;pic16f886.h: 1405: unsigned TRISB1 :1;
[; ;pic16f886.h: 1406: unsigned TRISB2 :1;
[; ;pic16f886.h: 1407: unsigned TRISB3 :1;
[; ;pic16f886.h: 1408: unsigned TRISB4 :1;
[; ;pic16f886.h: 1409: unsigned TRISB5 :1;
[; ;pic16f886.h: 1410: unsigned TRISB6 :1;
[; ;pic16f886.h: 1411: unsigned TRISB7 :1;
[; ;pic16f886.h: 1412: };
[; ;pic16f886.h: 1413: } TRISBbits_t;
[; ;pic16f886.h: 1414: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f886.h: 1459: extern volatile unsigned char TRISC @ 0x087;
"1461
[; ;pic16f886.h: 1461: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f886.h: 1464: typedef union {
[; ;pic16f886.h: 1465: struct {
[; ;pic16f886.h: 1466: unsigned TRISC0 :1;
[; ;pic16f886.h: 1467: unsigned TRISC1 :1;
[; ;pic16f886.h: 1468: unsigned TRISC2 :1;
[; ;pic16f886.h: 1469: unsigned TRISC3 :1;
[; ;pic16f886.h: 1470: unsigned TRISC4 :1;
[; ;pic16f886.h: 1471: unsigned TRISC5 :1;
[; ;pic16f886.h: 1472: unsigned TRISC6 :1;
[; ;pic16f886.h: 1473: unsigned TRISC7 :1;
[; ;pic16f886.h: 1474: };
[; ;pic16f886.h: 1475: } TRISCbits_t;
[; ;pic16f886.h: 1476: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f886.h: 1521: extern volatile unsigned char TRISE @ 0x089;
"1523
[; ;pic16f886.h: 1523: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f886.h: 1526: typedef union {
[; ;pic16f886.h: 1527: struct {
[; ;pic16f886.h: 1528: unsigned :3;
[; ;pic16f886.h: 1529: unsigned TRISE3 :1;
[; ;pic16f886.h: 1530: };
[; ;pic16f886.h: 1531: } TRISEbits_t;
[; ;pic16f886.h: 1532: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f886.h: 1542: extern volatile unsigned char PIE1 @ 0x08C;
"1544
[; ;pic16f886.h: 1544: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f886.h: 1547: typedef union {
[; ;pic16f886.h: 1548: struct {
[; ;pic16f886.h: 1549: unsigned TMR1IE :1;
[; ;pic16f886.h: 1550: unsigned TMR2IE :1;
[; ;pic16f886.h: 1551: unsigned CCP1IE :1;
[; ;pic16f886.h: 1552: unsigned SSPIE :1;
[; ;pic16f886.h: 1553: unsigned TXIE :1;
[; ;pic16f886.h: 1554: unsigned RCIE :1;
[; ;pic16f886.h: 1555: unsigned ADIE :1;
[; ;pic16f886.h: 1556: };
[; ;pic16f886.h: 1557: } PIE1bits_t;
[; ;pic16f886.h: 1558: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f886.h: 1598: extern volatile unsigned char PIE2 @ 0x08D;
"1600
[; ;pic16f886.h: 1600: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f886.h: 1603: typedef union {
[; ;pic16f886.h: 1604: struct {
[; ;pic16f886.h: 1605: unsigned CCP2IE :1;
[; ;pic16f886.h: 1606: unsigned :1;
[; ;pic16f886.h: 1607: unsigned ULPWUIE :1;
[; ;pic16f886.h: 1608: unsigned BCLIE :1;
[; ;pic16f886.h: 1609: unsigned EEIE :1;
[; ;pic16f886.h: 1610: unsigned C1IE :1;
[; ;pic16f886.h: 1611: unsigned C2IE :1;
[; ;pic16f886.h: 1612: unsigned OSFIE :1;
[; ;pic16f886.h: 1613: };
[; ;pic16f886.h: 1614: } PIE2bits_t;
[; ;pic16f886.h: 1615: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f886.h: 1655: extern volatile unsigned char PCON @ 0x08E;
"1657
[; ;pic16f886.h: 1657: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f886.h: 1660: typedef union {
[; ;pic16f886.h: 1661: struct {
[; ;pic16f886.h: 1662: unsigned nBOR :1;
[; ;pic16f886.h: 1663: unsigned nPOR :1;
[; ;pic16f886.h: 1664: unsigned :2;
[; ;pic16f886.h: 1665: unsigned SBOREN :1;
[; ;pic16f886.h: 1666: unsigned ULPWUE :1;
[; ;pic16f886.h: 1667: };
[; ;pic16f886.h: 1668: struct {
[; ;pic16f886.h: 1669: unsigned nBO :1;
[; ;pic16f886.h: 1670: };
[; ;pic16f886.h: 1671: } PCONbits_t;
[; ;pic16f886.h: 1672: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f886.h: 1702: extern volatile unsigned char OSCCON @ 0x08F;
"1704
[; ;pic16f886.h: 1704: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f886.h: 1707: typedef union {
[; ;pic16f886.h: 1708: struct {
[; ;pic16f886.h: 1709: unsigned SCS :1;
[; ;pic16f886.h: 1710: unsigned LTS :1;
[; ;pic16f886.h: 1711: unsigned HTS :1;
[; ;pic16f886.h: 1712: unsigned OSTS :1;
[; ;pic16f886.h: 1713: unsigned IRCF :3;
[; ;pic16f886.h: 1714: };
[; ;pic16f886.h: 1715: struct {
[; ;pic16f886.h: 1716: unsigned :4;
[; ;pic16f886.h: 1717: unsigned IRCF0 :1;
[; ;pic16f886.h: 1718: unsigned IRCF1 :1;
[; ;pic16f886.h: 1719: unsigned IRCF2 :1;
[; ;pic16f886.h: 1720: };
[; ;pic16f886.h: 1721: } OSCCONbits_t;
[; ;pic16f886.h: 1722: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f886.h: 1767: extern volatile unsigned char OSCTUNE @ 0x090;
"1769
[; ;pic16f886.h: 1769: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f886.h: 1772: typedef union {
[; ;pic16f886.h: 1773: struct {
[; ;pic16f886.h: 1774: unsigned TUN :5;
[; ;pic16f886.h: 1775: };
[; ;pic16f886.h: 1776: struct {
[; ;pic16f886.h: 1777: unsigned TUN0 :1;
[; ;pic16f886.h: 1778: unsigned TUN1 :1;
[; ;pic16f886.h: 1779: unsigned TUN2 :1;
[; ;pic16f886.h: 1780: unsigned TUN3 :1;
[; ;pic16f886.h: 1781: unsigned TUN4 :1;
[; ;pic16f886.h: 1782: };
[; ;pic16f886.h: 1783: } OSCTUNEbits_t;
[; ;pic16f886.h: 1784: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f886.h: 1819: extern volatile unsigned char SSPCON2 @ 0x091;
"1821
[; ;pic16f886.h: 1821: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f886.h: 1824: typedef union {
[; ;pic16f886.h: 1825: struct {
[; ;pic16f886.h: 1826: unsigned SEN :1;
[; ;pic16f886.h: 1827: unsigned RSEN :1;
[; ;pic16f886.h: 1828: unsigned PEN :1;
[; ;pic16f886.h: 1829: unsigned RCEN :1;
[; ;pic16f886.h: 1830: unsigned ACKEN :1;
[; ;pic16f886.h: 1831: unsigned ACKDT :1;
[; ;pic16f886.h: 1832: unsigned ACKSTAT :1;
[; ;pic16f886.h: 1833: unsigned GCEN :1;
[; ;pic16f886.h: 1834: };
[; ;pic16f886.h: 1835: } SSPCON2bits_t;
[; ;pic16f886.h: 1836: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f886.h: 1881: extern volatile unsigned char PR2 @ 0x092;
"1883
[; ;pic16f886.h: 1883: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f886.h: 1888: extern volatile unsigned char SSPADD @ 0x093;
"1890
[; ;pic16f886.h: 1890: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f886.h: 1895: extern volatile unsigned char SSPMSK @ 0x093;
"1897
[; ;pic16f886.h: 1897: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f886.h: 1900: extern volatile unsigned char MSK @ 0x093;
"1902
[; ;pic16f886.h: 1902: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f886.h: 1905: typedef union {
[; ;pic16f886.h: 1906: struct {
[; ;pic16f886.h: 1907: unsigned MSK0 :1;
[; ;pic16f886.h: 1908: unsigned MSK1 :1;
[; ;pic16f886.h: 1909: unsigned MSK2 :1;
[; ;pic16f886.h: 1910: unsigned MSK3 :1;
[; ;pic16f886.h: 1911: unsigned MSK4 :1;
[; ;pic16f886.h: 1912: unsigned MSK5 :1;
[; ;pic16f886.h: 1913: unsigned MSK6 :1;
[; ;pic16f886.h: 1914: unsigned MSK7 :1;
[; ;pic16f886.h: 1915: };
[; ;pic16f886.h: 1916: } SSPMSKbits_t;
[; ;pic16f886.h: 1917: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f886.h: 1960: typedef union {
[; ;pic16f886.h: 1961: struct {
[; ;pic16f886.h: 1962: unsigned MSK0 :1;
[; ;pic16f886.h: 1963: unsigned MSK1 :1;
[; ;pic16f886.h: 1964: unsigned MSK2 :1;
[; ;pic16f886.h: 1965: unsigned MSK3 :1;
[; ;pic16f886.h: 1966: unsigned MSK4 :1;
[; ;pic16f886.h: 1967: unsigned MSK5 :1;
[; ;pic16f886.h: 1968: unsigned MSK6 :1;
[; ;pic16f886.h: 1969: unsigned MSK7 :1;
[; ;pic16f886.h: 1970: };
[; ;pic16f886.h: 1971: } MSKbits_t;
[; ;pic16f886.h: 1972: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f886.h: 2017: extern volatile unsigned char SSPSTAT @ 0x094;
"2019
[; ;pic16f886.h: 2019: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f886.h: 2022: typedef union {
[; ;pic16f886.h: 2023: struct {
[; ;pic16f886.h: 2024: unsigned BF :1;
[; ;pic16f886.h: 2025: unsigned UA :1;
[; ;pic16f886.h: 2026: unsigned R_nW :1;
[; ;pic16f886.h: 2027: unsigned S :1;
[; ;pic16f886.h: 2028: unsigned P :1;
[; ;pic16f886.h: 2029: unsigned D_nA :1;
[; ;pic16f886.h: 2030: unsigned CKE :1;
[; ;pic16f886.h: 2031: unsigned SMP :1;
[; ;pic16f886.h: 2032: };
[; ;pic16f886.h: 2033: struct {
[; ;pic16f886.h: 2034: unsigned :2;
[; ;pic16f886.h: 2035: unsigned R :1;
[; ;pic16f886.h: 2036: unsigned :2;
[; ;pic16f886.h: 2037: unsigned D :1;
[; ;pic16f886.h: 2038: };
[; ;pic16f886.h: 2039: struct {
[; ;pic16f886.h: 2040: unsigned :2;
[; ;pic16f886.h: 2041: unsigned I2C_READ :1;
[; ;pic16f886.h: 2042: unsigned I2C_START :1;
[; ;pic16f886.h: 2043: unsigned I2C_STOP :1;
[; ;pic16f886.h: 2044: unsigned I2C_DATA :1;
[; ;pic16f886.h: 2045: };
[; ;pic16f886.h: 2046: struct {
[; ;pic16f886.h: 2047: unsigned :2;
[; ;pic16f886.h: 2048: unsigned nW :1;
[; ;pic16f886.h: 2049: unsigned :2;
[; ;pic16f886.h: 2050: unsigned nA :1;
[; ;pic16f886.h: 2051: };
[; ;pic16f886.h: 2052: struct {
[; ;pic16f886.h: 2053: unsigned :2;
[; ;pic16f886.h: 2054: unsigned nWRITE :1;
[; ;pic16f886.h: 2055: unsigned :2;
[; ;pic16f886.h: 2056: unsigned nADDRESS :1;
[; ;pic16f886.h: 2057: };
[; ;pic16f886.h: 2058: struct {
[; ;pic16f886.h: 2059: unsigned :2;
[; ;pic16f886.h: 2060: unsigned R_W :1;
[; ;pic16f886.h: 2061: unsigned :2;
[; ;pic16f886.h: 2062: unsigned D_A :1;
[; ;pic16f886.h: 2063: };
[; ;pic16f886.h: 2064: struct {
[; ;pic16f886.h: 2065: unsigned :2;
[; ;pic16f886.h: 2066: unsigned READ_WRITE :1;
[; ;pic16f886.h: 2067: unsigned :2;
[; ;pic16f886.h: 2068: unsigned DATA_ADDRESS :1;
[; ;pic16f886.h: 2069: };
[; ;pic16f886.h: 2070: } SSPSTATbits_t;
[; ;pic16f886.h: 2071: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f886.h: 2186: extern volatile unsigned char WPUB @ 0x095;
"2188
[; ;pic16f886.h: 2188: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f886.h: 2191: typedef union {
[; ;pic16f886.h: 2192: struct {
[; ;pic16f886.h: 2193: unsigned WPUB :8;
[; ;pic16f886.h: 2194: };
[; ;pic16f886.h: 2195: struct {
[; ;pic16f886.h: 2196: unsigned WPUB0 :1;
[; ;pic16f886.h: 2197: unsigned WPUB1 :1;
[; ;pic16f886.h: 2198: unsigned WPUB2 :1;
[; ;pic16f886.h: 2199: unsigned WPUB3 :1;
[; ;pic16f886.h: 2200: unsigned WPUB4 :1;
[; ;pic16f886.h: 2201: unsigned WPUB5 :1;
[; ;pic16f886.h: 2202: unsigned WPUB6 :1;
[; ;pic16f886.h: 2203: unsigned WPUB7 :1;
[; ;pic16f886.h: 2204: };
[; ;pic16f886.h: 2205: } WPUBbits_t;
[; ;pic16f886.h: 2206: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f886.h: 2256: extern volatile unsigned char IOCB @ 0x096;
"2258
[; ;pic16f886.h: 2258: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f886.h: 2261: typedef union {
[; ;pic16f886.h: 2262: struct {
[; ;pic16f886.h: 2263: unsigned IOCB :8;
[; ;pic16f886.h: 2264: };
[; ;pic16f886.h: 2265: struct {
[; ;pic16f886.h: 2266: unsigned IOCB0 :1;
[; ;pic16f886.h: 2267: unsigned IOCB1 :1;
[; ;pic16f886.h: 2268: unsigned IOCB2 :1;
[; ;pic16f886.h: 2269: unsigned IOCB3 :1;
[; ;pic16f886.h: 2270: unsigned IOCB4 :1;
[; ;pic16f886.h: 2271: unsigned IOCB5 :1;
[; ;pic16f886.h: 2272: unsigned IOCB6 :1;
[; ;pic16f886.h: 2273: unsigned IOCB7 :1;
[; ;pic16f886.h: 2274: };
[; ;pic16f886.h: 2275: } IOCBbits_t;
[; ;pic16f886.h: 2276: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f886.h: 2326: extern volatile unsigned char VRCON @ 0x097;
"2328
[; ;pic16f886.h: 2328: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f886.h: 2331: typedef union {
[; ;pic16f886.h: 2332: struct {
[; ;pic16f886.h: 2333: unsigned VR :4;
[; ;pic16f886.h: 2334: unsigned VRSS :1;
[; ;pic16f886.h: 2335: unsigned VRR :1;
[; ;pic16f886.h: 2336: unsigned VROE :1;
[; ;pic16f886.h: 2337: unsigned VREN :1;
[; ;pic16f886.h: 2338: };
[; ;pic16f886.h: 2339: struct {
[; ;pic16f886.h: 2340: unsigned VR0 :1;
[; ;pic16f886.h: 2341: unsigned VR1 :1;
[; ;pic16f886.h: 2342: unsigned VR2 :1;
[; ;pic16f886.h: 2343: unsigned VR3 :1;
[; ;pic16f886.h: 2344: };
[; ;pic16f886.h: 2345: } VRCONbits_t;
[; ;pic16f886.h: 2346: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f886.h: 2396: extern volatile unsigned char TXSTA @ 0x098;
"2398
[; ;pic16f886.h: 2398: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f886.h: 2401: typedef union {
[; ;pic16f886.h: 2402: struct {
[; ;pic16f886.h: 2403: unsigned TX9D :1;
[; ;pic16f886.h: 2404: unsigned TRMT :1;
[; ;pic16f886.h: 2405: unsigned BRGH :1;
[; ;pic16f886.h: 2406: unsigned SENDB :1;
[; ;pic16f886.h: 2407: unsigned SYNC :1;
[; ;pic16f886.h: 2408: unsigned TXEN :1;
[; ;pic16f886.h: 2409: unsigned TX9 :1;
[; ;pic16f886.h: 2410: unsigned CSRC :1;
[; ;pic16f886.h: 2411: };
[; ;pic16f886.h: 2412: struct {
[; ;pic16f886.h: 2413: unsigned TXD8 :1;
[; ;pic16f886.h: 2414: unsigned :5;
[; ;pic16f886.h: 2415: unsigned nTX8 :1;
[; ;pic16f886.h: 2416: };
[; ;pic16f886.h: 2417: struct {
[; ;pic16f886.h: 2418: unsigned :6;
[; ;pic16f886.h: 2419: unsigned TX8_9 :1;
[; ;pic16f886.h: 2420: };
[; ;pic16f886.h: 2421: } TXSTAbits_t;
[; ;pic16f886.h: 2422: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f886.h: 2482: extern volatile unsigned char SPBRG @ 0x099;
"2484
[; ;pic16f886.h: 2484: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f886.h: 2487: typedef union {
[; ;pic16f886.h: 2488: struct {
[; ;pic16f886.h: 2489: unsigned BRG0 :1;
[; ;pic16f886.h: 2490: unsigned BRG1 :1;
[; ;pic16f886.h: 2491: unsigned BRG2 :1;
[; ;pic16f886.h: 2492: unsigned BRG3 :1;
[; ;pic16f886.h: 2493: unsigned BRG4 :1;
[; ;pic16f886.h: 2494: unsigned BRG5 :1;
[; ;pic16f886.h: 2495: unsigned BRG6 :1;
[; ;pic16f886.h: 2496: unsigned BRG7 :1;
[; ;pic16f886.h: 2497: };
[; ;pic16f886.h: 2498: } SPBRGbits_t;
[; ;pic16f886.h: 2499: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f886.h: 2544: extern volatile unsigned char SPBRGH @ 0x09A;
"2546
[; ;pic16f886.h: 2546: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f886.h: 2549: typedef union {
[; ;pic16f886.h: 2550: struct {
[; ;pic16f886.h: 2551: unsigned SPBRGH :8;
[; ;pic16f886.h: 2552: };
[; ;pic16f886.h: 2553: struct {
[; ;pic16f886.h: 2554: unsigned BRG8 :1;
[; ;pic16f886.h: 2555: unsigned BRG9 :1;
[; ;pic16f886.h: 2556: unsigned BRG10 :1;
[; ;pic16f886.h: 2557: unsigned BRG11 :1;
[; ;pic16f886.h: 2558: unsigned BRG12 :1;
[; ;pic16f886.h: 2559: unsigned BRG13 :1;
[; ;pic16f886.h: 2560: unsigned BRG14 :1;
[; ;pic16f886.h: 2561: unsigned BRG15 :1;
[; ;pic16f886.h: 2562: };
[; ;pic16f886.h: 2563: } SPBRGHbits_t;
[; ;pic16f886.h: 2564: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f886.h: 2614: extern volatile unsigned char PWM1CON @ 0x09B;
"2616
[; ;pic16f886.h: 2616: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f886.h: 2619: typedef union {
[; ;pic16f886.h: 2620: struct {
[; ;pic16f886.h: 2621: unsigned PDC :7;
[; ;pic16f886.h: 2622: unsigned PRSEN :1;
[; ;pic16f886.h: 2623: };
[; ;pic16f886.h: 2624: struct {
[; ;pic16f886.h: 2625: unsigned PDC0 :1;
[; ;pic16f886.h: 2626: unsigned PDC1 :1;
[; ;pic16f886.h: 2627: unsigned PDC2 :1;
[; ;pic16f886.h: 2628: unsigned PDC3 :1;
[; ;pic16f886.h: 2629: unsigned PDC4 :1;
[; ;pic16f886.h: 2630: unsigned PDC5 :1;
[; ;pic16f886.h: 2631: unsigned PDC6 :1;
[; ;pic16f886.h: 2632: };
[; ;pic16f886.h: 2633: } PWM1CONbits_t;
[; ;pic16f886.h: 2634: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f886.h: 2684: extern volatile unsigned char ECCPAS @ 0x09C;
"2686
[; ;pic16f886.h: 2686: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f886.h: 2689: typedef union {
[; ;pic16f886.h: 2690: struct {
[; ;pic16f886.h: 2691: unsigned PSSBD :2;
[; ;pic16f886.h: 2692: unsigned PSSAC :2;
[; ;pic16f886.h: 2693: unsigned ECCPAS :3;
[; ;pic16f886.h: 2694: unsigned ECCPASE :1;
[; ;pic16f886.h: 2695: };
[; ;pic16f886.h: 2696: struct {
[; ;pic16f886.h: 2697: unsigned PSSBD0 :1;
[; ;pic16f886.h: 2698: unsigned PSSBD1 :1;
[; ;pic16f886.h: 2699: unsigned PSSAC0 :1;
[; ;pic16f886.h: 2700: unsigned PSSAC1 :1;
[; ;pic16f886.h: 2701: unsigned ECCPAS0 :1;
[; ;pic16f886.h: 2702: unsigned ECCPAS1 :1;
[; ;pic16f886.h: 2703: unsigned ECCPAS2 :1;
[; ;pic16f886.h: 2704: };
[; ;pic16f886.h: 2705: } ECCPASbits_t;
[; ;pic16f886.h: 2706: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f886.h: 2766: extern volatile unsigned char PSTRCON @ 0x09D;
"2768
[; ;pic16f886.h: 2768: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f886.h: 2771: typedef union {
[; ;pic16f886.h: 2772: struct {
[; ;pic16f886.h: 2773: unsigned STRA :1;
[; ;pic16f886.h: 2774: unsigned STRB :1;
[; ;pic16f886.h: 2775: unsigned STRC :1;
[; ;pic16f886.h: 2776: unsigned STRD :1;
[; ;pic16f886.h: 2777: unsigned STRSYNC :1;
[; ;pic16f886.h: 2778: };
[; ;pic16f886.h: 2779: } PSTRCONbits_t;
[; ;pic16f886.h: 2780: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f886.h: 2810: extern volatile unsigned char ADRESL @ 0x09E;
"2812
[; ;pic16f886.h: 2812: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f886.h: 2817: extern volatile unsigned char ADCON1 @ 0x09F;
"2819
[; ;pic16f886.h: 2819: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f886.h: 2822: typedef union {
[; ;pic16f886.h: 2823: struct {
[; ;pic16f886.h: 2824: unsigned :4;
[; ;pic16f886.h: 2825: unsigned VCFG0 :1;
[; ;pic16f886.h: 2826: unsigned VCFG1 :1;
[; ;pic16f886.h: 2827: unsigned :1;
[; ;pic16f886.h: 2828: unsigned ADFM :1;
[; ;pic16f886.h: 2829: };
[; ;pic16f886.h: 2830: } ADCON1bits_t;
[; ;pic16f886.h: 2831: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f886.h: 2851: extern volatile unsigned char WDTCON @ 0x105;
"2853
[; ;pic16f886.h: 2853: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f886.h: 2856: typedef union {
[; ;pic16f886.h: 2857: struct {
[; ;pic16f886.h: 2858: unsigned SWDTEN :1;
[; ;pic16f886.h: 2859: unsigned WDTPS :4;
[; ;pic16f886.h: 2860: };
[; ;pic16f886.h: 2861: struct {
[; ;pic16f886.h: 2862: unsigned :1;
[; ;pic16f886.h: 2863: unsigned WDTPS0 :1;
[; ;pic16f886.h: 2864: unsigned WDTPS1 :1;
[; ;pic16f886.h: 2865: unsigned WDTPS2 :1;
[; ;pic16f886.h: 2866: unsigned WDTPS3 :1;
[; ;pic16f886.h: 2867: };
[; ;pic16f886.h: 2868: } WDTCONbits_t;
[; ;pic16f886.h: 2869: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f886.h: 2904: extern volatile unsigned char CM1CON0 @ 0x107;
"2906
[; ;pic16f886.h: 2906: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f886.h: 2909: typedef union {
[; ;pic16f886.h: 2910: struct {
[; ;pic16f886.h: 2911: unsigned C1CH :2;
[; ;pic16f886.h: 2912: unsigned C1R :1;
[; ;pic16f886.h: 2913: unsigned :1;
[; ;pic16f886.h: 2914: unsigned C1POL :1;
[; ;pic16f886.h: 2915: unsigned C1OE :1;
[; ;pic16f886.h: 2916: unsigned C1OUT :1;
[; ;pic16f886.h: 2917: unsigned C1ON :1;
[; ;pic16f886.h: 2918: };
[; ;pic16f886.h: 2919: struct {
[; ;pic16f886.h: 2920: unsigned C1CH0 :1;
[; ;pic16f886.h: 2921: unsigned C1CH1 :1;
[; ;pic16f886.h: 2922: };
[; ;pic16f886.h: 2923: } CM1CON0bits_t;
[; ;pic16f886.h: 2924: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f886.h: 2969: extern volatile unsigned char CM2CON0 @ 0x108;
"2971
[; ;pic16f886.h: 2971: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f886.h: 2974: typedef union {
[; ;pic16f886.h: 2975: struct {
[; ;pic16f886.h: 2976: unsigned C2CH :2;
[; ;pic16f886.h: 2977: unsigned C2R :1;
[; ;pic16f886.h: 2978: unsigned :1;
[; ;pic16f886.h: 2979: unsigned C2POL :1;
[; ;pic16f886.h: 2980: unsigned C2OE :1;
[; ;pic16f886.h: 2981: unsigned C2OUT :1;
[; ;pic16f886.h: 2982: unsigned C2ON :1;
[; ;pic16f886.h: 2983: };
[; ;pic16f886.h: 2984: struct {
[; ;pic16f886.h: 2985: unsigned C2CH0 :1;
[; ;pic16f886.h: 2986: unsigned C2CH1 :1;
[; ;pic16f886.h: 2987: };
[; ;pic16f886.h: 2988: } CM2CON0bits_t;
[; ;pic16f886.h: 2989: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f886.h: 3034: extern volatile unsigned char CM2CON1 @ 0x109;
"3036
[; ;pic16f886.h: 3036: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f886.h: 3039: typedef union {
[; ;pic16f886.h: 3040: struct {
[; ;pic16f886.h: 3041: unsigned C2SYNC :1;
[; ;pic16f886.h: 3042: unsigned T1GSS :1;
[; ;pic16f886.h: 3043: unsigned :2;
[; ;pic16f886.h: 3044: unsigned C2RSEL :1;
[; ;pic16f886.h: 3045: unsigned C1RSEL :1;
[; ;pic16f886.h: 3046: unsigned MC2OUT :1;
[; ;pic16f886.h: 3047: unsigned MC1OUT :1;
[; ;pic16f886.h: 3048: };
[; ;pic16f886.h: 3049: } CM2CON1bits_t;
[; ;pic16f886.h: 3050: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f886.h: 3085: extern volatile unsigned char EEDATA @ 0x10C;
"3087
[; ;pic16f886.h: 3087: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f886.h: 3090: extern volatile unsigned char EEDAT @ 0x10C;
"3092
[; ;pic16f886.h: 3092: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f886.h: 3097: extern volatile unsigned char EEADR @ 0x10D;
"3099
[; ;pic16f886.h: 3099: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f886.h: 3104: extern volatile unsigned char EEDATH @ 0x10E;
"3106
[; ;pic16f886.h: 3106: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f886.h: 3111: extern volatile unsigned char EEADRH @ 0x10F;
"3113
[; ;pic16f886.h: 3113: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f886.h: 3118: extern volatile unsigned char SRCON @ 0x185;
"3120
[; ;pic16f886.h: 3120: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f886.h: 3123: typedef union {
[; ;pic16f886.h: 3124: struct {
[; ;pic16f886.h: 3125: unsigned FVREN :1;
[; ;pic16f886.h: 3126: unsigned :1;
[; ;pic16f886.h: 3127: unsigned PULSR :1;
[; ;pic16f886.h: 3128: unsigned PULSS :1;
[; ;pic16f886.h: 3129: unsigned C2REN :1;
[; ;pic16f886.h: 3130: unsigned C1SEN :1;
[; ;pic16f886.h: 3131: unsigned SR0 :1;
[; ;pic16f886.h: 3132: unsigned SR1 :1;
[; ;pic16f886.h: 3133: };
[; ;pic16f886.h: 3134: } SRCONbits_t;
[; ;pic16f886.h: 3135: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f886.h: 3175: extern volatile unsigned char BAUDCTL @ 0x187;
"3177
[; ;pic16f886.h: 3177: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f886.h: 3180: typedef union {
[; ;pic16f886.h: 3181: struct {
[; ;pic16f886.h: 3182: unsigned ABDEN :1;
[; ;pic16f886.h: 3183: unsigned WUE :1;
[; ;pic16f886.h: 3184: unsigned :1;
[; ;pic16f886.h: 3185: unsigned BRG16 :1;
[; ;pic16f886.h: 3186: unsigned SCKP :1;
[; ;pic16f886.h: 3187: unsigned :1;
[; ;pic16f886.h: 3188: unsigned RCIDL :1;
[; ;pic16f886.h: 3189: unsigned ABDOVF :1;
[; ;pic16f886.h: 3190: };
[; ;pic16f886.h: 3191: } BAUDCTLbits_t;
[; ;pic16f886.h: 3192: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f886.h: 3227: extern volatile unsigned char ANSEL @ 0x188;
"3229
[; ;pic16f886.h: 3229: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f886.h: 3232: typedef union {
[; ;pic16f886.h: 3233: struct {
[; ;pic16f886.h: 3234: unsigned ANS0 :1;
[; ;pic16f886.h: 3235: unsigned ANS1 :1;
[; ;pic16f886.h: 3236: unsigned ANS2 :1;
[; ;pic16f886.h: 3237: unsigned ANS3 :1;
[; ;pic16f886.h: 3238: unsigned ANS4 :1;
[; ;pic16f886.h: 3239: };
[; ;pic16f886.h: 3240: } ANSELbits_t;
[; ;pic16f886.h: 3241: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f886.h: 3271: extern volatile unsigned char ANSELH @ 0x189;
"3273
[; ;pic16f886.h: 3273: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f886.h: 3276: typedef union {
[; ;pic16f886.h: 3277: struct {
[; ;pic16f886.h: 3278: unsigned ANS8 :1;
[; ;pic16f886.h: 3279: unsigned ANS9 :1;
[; ;pic16f886.h: 3280: unsigned ANS10 :1;
[; ;pic16f886.h: 3281: unsigned ANS11 :1;
[; ;pic16f886.h: 3282: unsigned ANS12 :1;
[; ;pic16f886.h: 3283: unsigned ANS13 :1;
[; ;pic16f886.h: 3284: };
[; ;pic16f886.h: 3285: } ANSELHbits_t;
[; ;pic16f886.h: 3286: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f886.h: 3321: extern volatile unsigned char EECON1 @ 0x18C;
"3323
[; ;pic16f886.h: 3323: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f886.h: 3326: typedef union {
[; ;pic16f886.h: 3327: struct {
[; ;pic16f886.h: 3328: unsigned RD :1;
[; ;pic16f886.h: 3329: unsigned WR :1;
[; ;pic16f886.h: 3330: unsigned WREN :1;
[; ;pic16f886.h: 3331: unsigned WRERR :1;
[; ;pic16f886.h: 3332: unsigned :3;
[; ;pic16f886.h: 3333: unsigned EEPGD :1;
[; ;pic16f886.h: 3334: };
[; ;pic16f886.h: 3335: } EECON1bits_t;
[; ;pic16f886.h: 3336: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f886.h: 3366: extern volatile unsigned char EECON2 @ 0x18D;
"3368
[; ;pic16f886.h: 3368: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f886.h: 3378: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f886.h: 3380: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f886.h: 3382: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f886.h: 3384: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f886.h: 3386: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f886.h: 3388: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f886.h: 3390: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f886.h: 3392: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f886.h: 3394: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f886.h: 3396: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f886.h: 3398: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f886.h: 3400: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f886.h: 3402: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f886.h: 3404: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f886.h: 3406: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f886.h: 3408: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f886.h: 3410: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f886.h: 3412: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f886.h: 3414: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f886.h: 3416: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f886.h: 3418: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f886.h: 3420: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f886.h: 3422: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f886.h: 3424: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f886.h: 3426: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f886.h: 3428: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f886.h: 3430: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f886.h: 3432: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f886.h: 3434: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f886.h: 3436: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f886.h: 3438: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f886.h: 3440: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f886.h: 3442: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f886.h: 3444: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f886.h: 3446: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f886.h: 3448: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f886.h: 3450: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f886.h: 3452: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f886.h: 3454: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f886.h: 3456: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f886.h: 3458: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f886.h: 3460: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f886.h: 3462: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f886.h: 3464: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f886.h: 3466: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f886.h: 3468: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f886.h: 3470: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f886.h: 3472: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f886.h: 3474: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f886.h: 3476: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f886.h: 3478: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f886.h: 3480: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f886.h: 3482: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f886.h: 3484: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f886.h: 3486: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f886.h: 3488: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f886.h: 3490: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f886.h: 3492: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f886.h: 3494: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f886.h: 3496: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f886.h: 3498: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f886.h: 3500: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f886.h: 3502: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f886.h: 3504: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f886.h: 3506: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f886.h: 3508: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f886.h: 3510: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f886.h: 3512: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f886.h: 3514: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f886.h: 3516: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f886.h: 3518: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f886.h: 3520: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f886.h: 3522: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f886.h: 3524: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f886.h: 3526: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f886.h: 3528: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f886.h: 3530: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f886.h: 3532: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f886.h: 3534: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f886.h: 3536: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f886.h: 3538: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f886.h: 3540: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f886.h: 3542: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f886.h: 3544: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f886.h: 3546: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f886.h: 3548: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f886.h: 3550: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f886.h: 3552: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f886.h: 3554: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f886.h: 3556: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f886.h: 3558: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f886.h: 3560: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f886.h: 3562: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3564: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f886.h: 3566: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f886.h: 3568: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f886.h: 3570: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f886.h: 3572: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f886.h: 3574: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3576: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3578: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f886.h: 3580: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f886.h: 3582: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f886.h: 3584: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f886.h: 3586: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f886.h: 3588: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f886.h: 3590: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f886.h: 3592: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f886.h: 3594: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f886.h: 3596: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f886.h: 3598: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f886.h: 3600: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3602: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3604: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 3606: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f886.h: 3608: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 3610: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3612: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f886.h: 3614: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f886.h: 3616: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f886.h: 3618: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f886.h: 3620: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f886.h: 3622: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f886.h: 3624: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f886.h: 3626: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f886.h: 3628: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f886.h: 3630: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f886.h: 3632: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f886.h: 3634: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f886.h: 3636: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f886.h: 3638: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f886.h: 3640: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f886.h: 3642: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f886.h: 3644: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f886.h: 3646: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f886.h: 3648: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f886.h: 3650: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f886.h: 3652: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f886.h: 3654: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f886.h: 3656: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f886.h: 3658: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f886.h: 3660: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f886.h: 3662: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f886.h: 3664: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f886.h: 3666: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f886.h: 3668: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f886.h: 3670: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f886.h: 3672: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f886.h: 3674: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f886.h: 3676: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f886.h: 3678: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f886.h: 3680: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f886.h: 3682: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f886.h: 3684: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f886.h: 3686: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f886.h: 3688: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f886.h: 3690: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f886.h: 3692: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f886.h: 3694: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f886.h: 3696: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f886.h: 3698: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f886.h: 3700: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f886.h: 3702: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f886.h: 3704: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f886.h: 3706: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f886.h: 3708: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f886.h: 3710: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f886.h: 3712: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f886.h: 3714: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f886.h: 3716: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f886.h: 3718: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f886.h: 3720: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f886.h: 3722: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f886.h: 3724: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f886.h: 3726: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f886.h: 3728: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f886.h: 3730: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f886.h: 3732: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f886.h: 3734: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f886.h: 3736: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f886.h: 3738: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f886.h: 3740: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f886.h: 3742: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f886.h: 3744: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f886.h: 3746: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f886.h: 3748: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f886.h: 3750: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f886.h: 3752: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f886.h: 3754: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f886.h: 3756: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f886.h: 3758: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f886.h: 3760: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f886.h: 3762: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f886.h: 3764: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f886.h: 3766: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f886.h: 3768: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f886.h: 3770: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f886.h: 3772: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3774: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3776: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f886.h: 3778: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f886.h: 3780: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f886.h: 3782: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f886.h: 3784: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f886.h: 3786: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f886.h: 3788: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f886.h: 3790: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3792: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f886.h: 3794: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f886.h: 3796: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f886.h: 3798: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 3800: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f886.h: 3802: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3804: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 3806: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f886.h: 3808: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f886.h: 3810: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f886.h: 3812: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f886.h: 3814: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f886.h: 3816: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f886.h: 3818: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f886.h: 3820: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f886.h: 3822: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f886.h: 3824: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f886.h: 3826: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f886.h: 3828: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f886.h: 3830: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f886.h: 3832: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f886.h: 3834: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f886.h: 3836: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f886.h: 3838: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f886.h: 3840: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f886.h: 3842: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f886.h: 3844: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f886.h: 3846: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f886.h: 3848: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f886.h: 3850: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f886.h: 3852: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f886.h: 3854: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f886.h: 3856: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f886.h: 3858: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f886.h: 3860: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f886.h: 3862: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f886.h: 3864: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f886.h: 3866: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f886.h: 3868: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f886.h: 3870: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f886.h: 3872: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f886.h: 3874: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 3876: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f886.h: 3878: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 3880: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f886.h: 3882: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f886.h: 3884: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f886.h: 3886: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f886.h: 3888: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f886.h: 3890: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f886.h: 3892: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f886.h: 3894: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f886.h: 3896: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f886.h: 3898: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f886.h: 3900: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f886.h: 3902: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f886.h: 3904: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f886.h: 3906: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f886.h: 3908: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f886.h: 3910: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f886.h: 3912: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f886.h: 3914: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f886.h: 3916: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f886.h: 3918: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f886.h: 3920: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f886.h: 3922: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f886.h: 3924: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f886.h: 3926: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f886.h: 3928: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f886.h: 3930: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f886.h: 3932: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f886.h: 3934: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f886.h: 3936: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f886.h: 3938: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f886.h: 3940: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f886.h: 3942: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f886.h: 3944: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f886.h: 3946: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f886.h: 3948: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f886.h: 3950: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f886.h: 3952: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f886.h: 3954: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f886.h: 3956: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f886.h: 3958: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f886.h: 3960: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f886.h: 3962: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f886.h: 3964: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f886.h: 3966: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f886.h: 3968: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f886.h: 3970: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f886.h: 3972: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f886.h: 3974: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 3976: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 3978: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f886.h: 3980: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f886.h: 3982: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f886.h: 3984: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f886.h: 3986: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f886.h: 3988: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f886.h: 3990: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f886.h: 3992: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f886.h: 3994: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f886.h: 3996: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f886.h: 3998: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f886.h: 4000: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f886.h: 4002: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f886.h: 4004: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f886.h: 4006: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f886.h: 4008: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f886.h: 4010: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f886.h: 4012: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f886.h: 4014: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f886.h: 4016: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f886.h: 4018: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f886.h: 4020: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f886.h: 4022: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f886.h: 4024: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f886.h: 4026: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f886.h: 4028: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f886.h: 4030: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f886.h: 4032: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f886.h: 4034: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f886.h: 4036: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f886.h: 4038: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f886.h: 4040: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f886.h: 4042: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f886.h: 4044: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f886.h: 4046: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f886.h: 4048: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f886.h: 4050: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f886.h: 4052: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 4054: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f886.h: 4056: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f886.h: 4058: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f886.h: 4060: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f886.h: 4062: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f886.h: 4064: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f886.h: 4066: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f886.h: 4068: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f886.h: 4070: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f886.h: 4072: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f886.h: 4074: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f886.h: 4076: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f886.h: 4078: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"7 main.h
[p x FOSC=INTRC_NOCLKOUT ]
"8
[p x WDTE=OFF ]
"9
[p x PWRTE=OFF ]
"10
[p x MCLRE=ON ]
"11
[p x CP=OFF ]
"12
[p x CPD=OFF ]
"13
[p x BOREN=ON ]
"14
[p x IESO=ON ]
"15
[p x FCMEN=ON ]
"16
[p x LVP=OFF ]
"19
[p x BOR4V=BOR40V ]
"20
[p x WRT=OFF ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
"15 main.c
[v _accuValor `ui ~T0 @X0 1 e ]
[i _accuValor
-> -> 0 `i `ui
]
[; ;main.c: 15: unsigned int accuValor = 0;
"16
[v _j `uc ~T0 @X0 1 e ]
[i _j
-> -> 0 `i `uc
]
[v _i `uc ~T0 @X0 1 e ]
[i _i
-> -> 0 `i `uc
]
[; ;main.c: 16: unsigned char j = 0, i = 0;
"17
[v _res `uc ~T0 @X0 1 e ]
[i _res
-> -> 1 `i `uc
]
[v _outC `uc ~T0 @X0 1 e ]
[i _outC
-> -> 0 `i `uc
]
[v _outD `uc ~T0 @X0 1 e ]
[i _outD
-> -> 0 `i `uc
]
[v _outU `uc ~T0 @X0 1 e ]
[i _outU
-> -> 0 `i `uc
]
[; ;main.c: 17: unsigned char res = 1, outC = 0, outD = 0, outU = 0;
"18
[v _resC `uc ~T0 @X0 1 e ]
[i _resC
-> -> 0 `i `uc
]
[v _resD `uc ~T0 @X0 1 e ]
[i _resD
-> -> 0 `i `uc
]
[v _resU `uc ~T0 @X0 1 e ]
[i _resU
-> -> 0 `i `uc
]
[; ;main.c: 18: unsigned char resC = 0, resD = 0, resU = 0;
"19
[v _digit `uc ~T0 @X0 1 e ]
[i _digit
-> -> 0 `i `uc
]
[; ;main.c: 19: unsigned char digit = 0;
"20
[v _swiza `b ~T0 @X0 1 s ]
[v _btnUp `b ~T0 @X0 1 s ]
[v _btnDown `b ~T0 @X0 1 s ]
[v _reset `b ~T0 @X0 1 s ]
[; ;main.c: 20: static bit swiza, btnUp, btnDown, reset;
"21
[v _garron `ui ~T0 @X0 1 e ]
[i _garron
-> -> 0 `i `ui
]
[v _tempo `ui ~T0 @X0 1 e ]
[i _tempo
-> -> 0 `i `ui
]
[; ;main.c: 21: unsigned int garron = 0, tempo = 0;
"22
[v _datos `uc ~T0 @X0 -> 28 `i e ]
[i _datos
:U ..
..
]
[; ;main.c: 22: unsigned char datos[28] = {};
"23
[v _mainAux `ui ~T0 @X0 1 e ]
[i _mainAux
-> -> 0 `i `ui
]
[; ;main.c: 23: unsigned int mainAux = 0;
"24
[v _btnUpT `uc ~T0 @X0 1 e ]
[i _btnUpT
-> -> 0 `i `uc
]
[v _btnDownT `uc ~T0 @X0 1 e ]
[i _btnDownT
-> -> 0 `i `uc
]
[; ;main.c: 24: unsigned char btnUpT = 0, btnDownT = 0;
"25
[v _tick `uc ~T0 @X0 1 e ]
[i _tick
-> -> 0 `i `uc
]
[; ;main.c: 25: unsigned char tick = 0;
"26
[v _timerReset `ui ~T0 @X0 1 e ]
[i _timerReset
-> -> 0 `i `ui
]
[; ;main.c: 26: unsigned int timerReset = 0;
"28
[v _swBot `Cuc ~T0 @X0 1 e ]
[i _swBot
-> -> 135 `i `uc
]
[v _swTop `Cuc ~T0 @X0 1 e ]
[i _swTop
-> -> 191 `i `uc
]
[; ;main.c: 28: const unsigned char swBot = 135, swTop = 191;
"30
[v _uart_init `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 30: void uart_init(){
[e :U _uart_init ]
[f ]
[; ;main.c: 31: PIE1bits.RCIE = 1;
"31
[e = . . _PIE1bits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 32: PIE1bits.TXIE = 0;
"32
[e = . . _PIE1bits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 33: TXSTAbits.BRGH = 1;
"33
[e = . . _TXSTAbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 34: BAUDCTLbits.BRG16 = 0;
"34
[e = . . _BAUDCTLbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 37: SPBRGH = 0x00;
"37
[e = _SPBRGH -> -> 0 `i `uc ]
[; ;main.c: 38: SPBRG = 0x33;
"38
[e = _SPBRG -> -> 51 `i `uc ]
[; ;main.c: 40: TXSTAbits.SYNC = 0;
"40
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 41: RCSTAbits.SPEN = 1;
"41
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 42: TXSTAbits.TXEN = 1;
"42
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 43: RCSTAbits.CREN = 1;
"43
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 44: }
"44
[e :UE 139 ]
}
"46
[v _putch `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 46: void putch(char data){
[e :U _putch ]
[v _data `uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 47: while(!PIR1bits.TXIF)
"47
[e $U 141  ]
[e :U 142 ]
[; ;main.c: 48: continue;
"48
[e $U 141  ]
[e :U 141 ]
"47
[e $ ! != -> . . _PIR1bits 0 4 `i -> -> -> 0 `i `Vuc `i 142  ]
[e :U 143 ]
[; ;main.c: 49: TXREG = data;
"49
[e = _TXREG _data ]
[; ;main.c: 50: }
"50
[e :UE 140 ]
}
"52
[v _init_timer2 `(v ~T0 @X0 1 ef3`uc`uc`uc ]
{
[; ;main.c: 52: void init_timer2(unsigned char pre, unsigned char post, unsigned char eoc){
[e :U _init_timer2 ]
[v _pre `uc ~T0 @X0 1 r1 ]
[v _post `uc ~T0 @X0 1 r2 ]
[v _eoc `uc ~T0 @X0 1 r3 ]
[f ]
"53
[v _sfr `uc ~T0 @X0 1 a ]
[; ;main.c: 53: unsigned char sfr = 0x00;
[e = _sfr -> -> 0 `i `uc ]
[; ;main.c: 54: PIR1bits.TMR2IF = 0;
"54
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 55: PR2 = eoc;
"55
[e = _PR2 _eoc ]
[; ;main.c: 56: sfr = ((post-1) << 3) & 0x78;
"56
[e = _sfr -> & << - -> _post `i -> 1 `i -> 3 `i -> 120 `i `uc ]
[; ;main.c: 57: sfr += 4;
"57
[e =+ _sfr -> -> 4 `i `uc ]
[; ;main.c: 58: sfr += pre;
"58
[e =+ _sfr _pre ]
[; ;main.c: 59: T2CON = sfr;
"59
[e = _T2CON _sfr ]
[; ;main.c: 60: PIE1bits.TMR2IE = 1;
"60
[e = . . _PIE1bits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 61: }
"61
[e :UE 144 ]
}
"63
[v _rw_eeprom `(uc ~T0 @X0 1 ef3`uc`uc`uc ]
{
[; ;main.c: 63: unsigned char rw_eeprom(unsigned char addr, unsigned char data, unsigned char rw){
[e :U _rw_eeprom ]
[v _addr `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[v _rw `uc ~T0 @X0 1 r3 ]
[f ]
[; ;main.c: 65: if (rw) {
"65
[e $ ! != -> _rw `i -> -> -> 0 `i `uc `i 146  ]
{
[; ;main.c: 66: EEADR = addr;
"66
[e = _EEADR _addr ]
[; ;main.c: 67: EEDAT = data;
"67
[e = _EEDAT _data ]
[; ;main.c: 68: EECON1bits.EEPGD = 0;
"68
[e = . . _EECON1bits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 69: EECON1bits.WREN = 1;
"69
[e = . . _EECON1bits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 70: EECON2 = 0x55;
"70
[e = _EECON2 -> -> 85 `i `uc ]
[; ;main.c: 71: EECON2 = 0xAA;
"71
[e = _EECON2 -> -> 170 `i `uc ]
[; ;main.c: 72: EECON1bits.WR = 1;
"72
[e = . . _EECON1bits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 73: while (!PIR2bits.EEIF);
"73
[e $U 147  ]
[e :U 148 ]
[e :U 147 ]
[e $ ! != -> . . _PIR2bits 0 4 `i -> -> -> 0 `i `Vuc `i 148  ]
[e :U 149 ]
[; ;main.c: 74: PIR2bits.EEIF = 0;
"74
[e = . . _PIR2bits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 75: return 0;
"75
[e ) -> -> 0 `i `uc ]
[e $UE 145  ]
"76
}
[; ;main.c: 76: }
[e $U 150  ]
"77
[e :U 146 ]
[; ;main.c: 77: else {
{
[; ;main.c: 78: EEADR = addr;
"78
[e = _EEADR _addr ]
[; ;main.c: 79: EECON1bits.EEPGD = 0;
"79
[e = . . _EECON1bits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 80: EECON1bits.RD = 1;
"80
[e = . . _EECON1bits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 81: return EEDAT;
"81
[e ) _EEDAT ]
[e $UE 145  ]
"82
}
[e :U 150 ]
[; ;main.c: 82: }
[; ;main.c: 83: }
"83
[e :UE 145 ]
}
"85
[v _display `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 85: void display() {
[e :U _display ]
[f ]
[; ;main.c: 86: switch (digit) {
"86
[e $U 153  ]
{
[; ;main.c: 87: case 1:
"87
[e :U 154 ]
[; ;main.c: 88: PORTCbits.RC3 = 0;
"88
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 89: PORTCbits.RC4 = 1;
"89
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 90: PORTCbits.RC5 = 1;
"90
[e = . . _PORTCbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 91: PORTB = outC;
"91
[e = _PORTB _outC ]
[; ;main.c: 92: if (resC) {
"92
[e $ ! != -> _resC `i -> -> -> 0 `i `uc `i 155  ]
{
[; ;main.c: 93: if (PORTAbits.RA6) {
"93
[e $ ! != -> . . _PORTAbits 0 6 `i -> -> -> 0 `i `Vuc `i 156  ]
{
[; ;main.c: 94: PORTA = resC | 0xC0;
"94
[e = _PORTA -> | -> _resC `i -> 192 `i `uc ]
"95
}
[; ;main.c: 95: }
[e $U 157  ]
"96
[e :U 156 ]
[; ;main.c: 96: else {
{
[; ;main.c: 97: PORTA = resC | 0x80;
"97
[e = _PORTA -> | -> _resC `i -> 128 `i `uc ]
"98
}
[e :U 157 ]
"99
}
[; ;main.c: 98: }
[; ;main.c: 99: }
[e $U 158  ]
"100
[e :U 155 ]
[; ;main.c: 100: else {
{
[; ;main.c: 101: PORTAbits.RA7 = 0;
"101
[e = . . _PORTAbits 0 7 -> -> 0 `i `uc ]
"102
}
[e :U 158 ]
[; ;main.c: 102: }
[; ;main.c: 103: break;
"103
[e $U 152  ]
[; ;main.c: 104: case 2:
"104
[e :U 159 ]
[; ;main.c: 105: PORTCbits.RC3 = 1;
"105
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 106: PORTCbits.RC4 = 0;
"106
[e = . . _PORTCbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 107: PORTCbits.RC5 = 1;
"107
[e = . . _PORTCbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 108: PORTB = outD;
"108
[e = _PORTB _outD ]
[; ;main.c: 109: if (resD || resC) {
"109
[e $ ! || != -> _resD `i -> -> -> 0 `i `uc `i != -> _resC `i -> -> -> 0 `i `uc `i 160  ]
{
[; ;main.c: 110: if (PORTAbits.RA6) {
"110
[e $ ! != -> . . _PORTAbits 0 6 `i -> -> -> 0 `i `Vuc `i 161  ]
{
[; ;main.c: 111: PORTA = resD | 0xC0;
"111
[e = _PORTA -> | -> _resD `i -> 192 `i `uc ]
"112
}
[; ;main.c: 112: }
[e $U 162  ]
"113
[e :U 161 ]
[; ;main.c: 113: else {
{
[; ;main.c: 114: PORTA = resD | 0x80;
"114
[e = _PORTA -> | -> _resD `i -> 128 `i `uc ]
"115
}
[e :U 162 ]
"116
}
[; ;main.c: 115: }
[; ;main.c: 116: }
[e $U 163  ]
"117
[e :U 160 ]
[; ;main.c: 117: else {
{
[; ;main.c: 118: PORTAbits.RA7 = 0;
"118
[e = . . _PORTAbits 0 7 -> -> 0 `i `uc ]
"119
}
[e :U 163 ]
[; ;main.c: 119: }
[; ;main.c: 120: break;
"120
[e $U 152  ]
[; ;main.c: 121: case 3:
"121
[e :U 164 ]
[; ;main.c: 122: PORTCbits.RC3 = 1;
"122
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 123: PORTCbits.RC4 = 1;
"123
[e = . . _PORTCbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 124: PORTCbits.RC5 = 0;
"124
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 125: PORTB = outU;
"125
[e = _PORTB _outU ]
[; ;main.c: 126: if (PORTAbits.RA6) {
"126
[e $ ! != -> . . _PORTAbits 0 6 `i -> -> -> 0 `i `Vuc `i 165  ]
{
[; ;main.c: 127: PORTA = resU | 0xC0;
"127
[e = _PORTA -> | -> _resU `i -> 192 `i `uc ]
"128
}
[; ;main.c: 128: }
[e $U 166  ]
"129
[e :U 165 ]
[; ;main.c: 129: else {
{
[; ;main.c: 130: PORTA = resU | 0x80;
"130
[e = _PORTA -> | -> _resU `i -> 128 `i `uc ]
"131
}
[e :U 166 ]
[; ;main.c: 131: }
[; ;main.c: 132: break;
"132
[e $U 152  ]
"133
}
[; ;main.c: 133: }
[e $U 152  ]
"86
[e :U 153 ]
[e [\ _digit , $ -> -> 1 `i `uc 154
 , $ -> -> 2 `i `uc 159
 , $ -> -> 3 `i `uc 164
 152 ]
"133
[e :U 152 ]
[; ;main.c: 134: }
"134
[e :UE 151 ]
}
"136
[v _cattle_nr `(ui ~T0 @X0 1 ef2`uc`ui ]
{
[; ;main.c: 136: unsigned int cattle_nr(char opt, unsigned int cattle) {
[e :U _cattle_nr ]
[v _opt `uc ~T0 @X0 1 r1 ]
[v _cattle `ui ~T0 @X0 1 r2 ]
[f ]
"137
[v _rta `ui ~T0 @X0 1 a ]
[; ;main.c: 137: unsigned int rta = 0;
[e = _rta -> -> 0 `i `ui ]
"138
[v _dato `uc ~T0 @X0 1 a ]
[; ;main.c: 138: unsigned char dato = 0;
[e = _dato -> -> 0 `i `uc ]
[; ;main.c: 139: switch (opt) {
"139
[e $U 169  ]
{
[; ;main.c: 140: case 0:
"140
[e :U 170 ]
[; ;main.c: 141: dato = rw_eeprom(0x00, 0, 0);
"141
[e = _dato ( _rw_eeprom (3 , , -> -> 0 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 142: if (dato == 0x10) {
"142
[e $ ! == -> _dato `i -> 16 `i 171  ]
{
[; ;main.c: 143: dato = rw_eeprom(0x01, 0, 0);
"143
[e = _dato ( _rw_eeprom (3 , , -> -> 1 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 144: rta = dato;
"144
[e = _rta -> _dato `ui ]
[; ;main.c: 145: rta = rta << 8;
"145
[e = _rta << _rta -> 8 `i ]
[; ;main.c: 146: dato = rw_eeprom(0x02, 0, 0);
"146
[e = _dato ( _rw_eeprom (3 , , -> -> 2 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 147: rta += dato;
"147
[e =+ _rta -> _dato `ui ]
"148
}
[; ;main.c: 148: } else {
[e $U 172  ]
[e :U 171 ]
{
[; ;main.c: 149: rw_eeprom(0x00, 0x10, 1);
"149
[e ( _rw_eeprom (3 , , -> -> 0 `i `uc -> -> 16 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 150: rw_eeprom(0x01, 0x00, 1);
"150
[e ( _rw_eeprom (3 , , -> -> 1 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 151: rw_eeprom(0x02, 0x00, 1);
"151
[e ( _rw_eeprom (3 , , -> -> 2 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 152: rta = 0;
"152
[e = _rta -> -> 0 `i `ui ]
"153
}
[e :U 172 ]
[; ;main.c: 153: }
[; ;main.c: 154: break;
"154
[e $U 168  ]
[; ;main.c: 155: case 1:
"155
[e :U 173 ]
[; ;main.c: 156: dato = cattle & 0x00FF;
"156
[e = _dato -> & _cattle -> -> 255 `i `ui `uc ]
[; ;main.c: 157: rw_eeprom(0x02, dato, 1);
"157
[e ( _rw_eeprom (3 , , -> -> 2 `i `uc _dato -> -> 1 `i `uc ]
[; ;main.c: 159: cattle = cattle >> 8;
"159
[e = _cattle >> _cattle -> 8 `i ]
[; ;main.c: 160: dato = cattle & 0x00FF;
"160
[e = _dato -> & _cattle -> -> 255 `i `ui `uc ]
[; ;main.c: 161: rw_eeprom(0x01, dato, 1);
"161
[e ( _rw_eeprom (3 , , -> -> 1 `i `uc _dato -> -> 1 `i `uc ]
[; ;main.c: 162: rta = 0x10;
"162
[e = _rta -> -> 16 `i `ui ]
[; ;main.c: 163: break;
"163
[e $U 168  ]
"164
}
[; ;main.c: 164: }
[e $U 168  ]
"139
[e :U 169 ]
[e [\ _opt , $ -> -> 0 `i `uc 170
 , $ -> -> 1 `i `uc 173
 168 ]
"164
[e :U 168 ]
[; ;main.c: 165: return rta;
"165
[e ) _rta ]
[e $UE 167  ]
[; ;main.c: 166: }
"166
[e :UE 167 ]
}
[v $root$_ints_isr `(v ~T0 @X0 0 e ]
[v F1868 `(v ~T0 @X0 1 tf ]
"168
[v _ints_isr `IF1868 ~T0 @X0 1 e ]
{
[; ;main.c: 168: void interrupt ints_isr(void){
[e :U _ints_isr ]
[f ]
[; ;main.c: 171: if (PIR1bits.RCIF) {
"171
[e $ ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 175  ]
{
"173
[v _aux `uc ~T0 @X0 1 a ]
[; ;main.c: 173: unsigned char aux = 0, nral1 = 0, nral2 = 0;
[e = _aux -> -> 0 `i `uc ]
[v _nral1 `uc ~T0 @X0 1 a ]
[e = _nral1 -> -> 0 `i `uc ]
[v _nral2 `uc ~T0 @X0 1 a ]
[e = _nral2 -> -> 0 `i `uc ]
"174
[v _valor `ui ~T0 @X0 1 a ]
[; ;main.c: 174: unsigned int valor = 0, upper = 0, lower = 0;
[e = _valor -> -> 0 `i `ui ]
[v _upper `ui ~T0 @X0 1 a ]
[e = _upper -> -> 0 `i `ui ]
[v _lower `ui ~T0 @X0 1 a ]
[e = _lower -> -> 0 `i `ui ]
"175
[v _garron_1c `uc ~T0 @X0 1 a ]
[; ;main.c: 175: unsigned char garron_1c = 0, garron_1d = 0, garron_1u = 0;
[e = _garron_1c -> -> 0 `i `uc ]
[v _garron_1d `uc ~T0 @X0 1 a ]
[e = _garron_1d -> -> 0 `i `uc ]
[v _garron_1u `uc ~T0 @X0 1 a ]
[e = _garron_1u -> -> 0 `i `uc ]
"176
[v _garron_2c `uc ~T0 @X0 1 a ]
[; ;main.c: 176: unsigned char garron_2c = 0, garron_2d = 0, garron_2u = 0;
[e = _garron_2c -> -> 0 `i `uc ]
[v _garron_2d `uc ~T0 @X0 1 a ]
[e = _garron_2d -> -> 0 `i `uc ]
[v _garron_2u `uc ~T0 @X0 1 a ]
[e = _garron_2u -> -> 0 `i `uc ]
"177
[v F1881 `b ~T0 @X0 1 s process ]
"178
[v _drop `uc ~T0 @X0 1 a ]
[; ;main.c: 177: static bit process;
[; ;main.c: 178: unsigned char drop;
[; ;main.c: 191: while (!PIR1bits.RCIF);
"191
[e $U 176  ]
[e :U 177 ]
[e :U 176 ]
[e $ ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 177  ]
[e :U 178 ]
[; ;main.c: 192: if (!RCSTAbits.FERR & !RCSTAbits.OERR) {
"192
[e $ ! & ! != -> . . _RCSTAbits 0 2 `i -> -> -> 0 `i `Vuc `i ! != -> . . _RCSTAbits 0 1 `i -> -> -> 0 `i `Vuc `i 179  ]
{
[; ;main.c: 193: datos[i] = RCREG;
"193
[e = *U + &U _datos * -> _i `ux -> -> # *U &U _datos `ui `ux _RCREG ]
[; ;main.c: 194: i++;
"194
[e ++ _i -> -> 1 `i `uc ]
[; ;main.c: 198: if (datos[i-1] == '\r' | datos[i-1] == '\n') {
"198
[e $ ! | == -> *U + &U _datos * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 13 `ui == -> *U + &U _datos * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 10 `ui 180  ]
{
[; ;main.c: 199: process = 0;
"199
[e = F1881 -> -> 0 `i `b ]
[; ;main.c: 200: if (datos[0] == 0x02) {
"200
[e $ ! == -> *U + &U _datos * -> -> -> 0 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 2 `i 181  ]
{
[; ;main.c: 201: if (i > 20) {
"201
[e $ ! > -> _i `i -> 20 `i 182  ]
{
[; ;main.c: 202: for (unsigned char k = 0; k < i; k++) {
"202
{
[v _k `uc ~T0 @X0 1 a ]
[e = _k -> -> 0 `i `uc ]
[e $U 186  ]
[e :U 183 ]
{
[; ;main.c: 203: if (datos[k] == 0x23) {
"203
[e $ ! == -> *U + &U _datos * -> _k `ux -> -> # *U &U _datos `ui `ux `i -> 35 `i 187  ]
{
[; ;main.c: 204: nral1 = k;
"204
[e = _nral1 _k ]
[; ;main.c: 205: break;
"205
[e $U 184  ]
"206
}
[e :U 187 ]
"207
}
"202
[e ++ _k -> -> 1 `i `uc ]
[e :U 186 ]
[e $ < -> _k `i -> _i `i 183  ]
[e :U 184 ]
"207
}
[; ;main.c: 206: }
[; ;main.c: 207: }
[; ;main.c: 208: for (unsigned char k = (nral1 + 1); k < i; k++) {
"208
{
[v _k `uc ~T0 @X0 1 a ]
[e = _k -> + -> _nral1 `i -> 1 `i `uc ]
[e $U 191  ]
[e :U 188 ]
{
[; ;main.c: 209: if (datos[k] == 0x23) {
"209
[e $ ! == -> *U + &U _datos * -> _k `ux -> -> # *U &U _datos `ui `ux `i -> 35 `i 192  ]
{
[; ;main.c: 210: nral2 = k;
"210
[e = _nral2 _k ]
[; ;main.c: 211: break;
"211
[e $U 189  ]
"212
}
[e :U 192 ]
"213
}
"208
[e ++ _k -> -> 1 `i `uc ]
[e :U 191 ]
[e $ < -> _k `i -> _i `i 188  ]
[e :U 189 ]
"213
}
[; ;main.c: 212: }
[; ;main.c: 213: }
[; ;main.c: 214: if (datos[nral1 + 1] != '-') {
"214
[e $ ! != -> *U + &U _datos * -> -> + -> _nral1 `i -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 45 `ui 193  ]
{
[; ;main.c: 215: switch (nral2 - nral1) {
"215
[e $U 195  ]
{
[; ;main.c: 216: case 3:
"216
[e :U 196 ]
[; ;main.c: 217: valor = (datos[nral1 + 1] - 48) * 100 + (datos[nral1 + 2] - 48) * 10;
"217
[e = _valor -> + * - -> *U + &U _datos * -> -> + -> _nral1 `i -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _datos * -> -> + -> _nral1 `i -> 2 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 10 `i `ui ]
[; ;main.c: 218: break;
"218
[e $U 194  ]
[; ;main.c: 219: case 4:
"219
[e :U 197 ]
[; ;main.c: 220: valor = (datos[nral1 + 1] - 48) * 1000 + (datos[nral1 + 2] - 48) * 100 + (datos[nral1 + 3] - 48) * 10;
"220
[e = _valor -> + + * - -> *U + &U _datos * -> -> + -> _nral1 `i -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 1000 `i * - -> *U + &U _datos * -> -> + -> _nral1 `i -> 2 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _datos * -> -> + -> _nral1 `i -> 3 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 10 `i `ui ]
[; ;main.c: 221: break;
"221
[e $U 194  ]
"222
}
[; ;main.c: 222: }
[e $U 194  ]
"215
[e :U 195 ]
[e [\ - -> _nral2 `i -> _nral1 `i , $ -> 3 `i 196
 , $ -> 4 `i 197
 194 ]
"222
[e :U 194 ]
[; ;main.c: 223: process = 1;
"223
[e = F1881 -> -> 1 `i `b ]
"224
}
[e :U 193 ]
[; ;main.c: 224: }
[; ;main.c: 225: i = 0;
"225
[e = _i -> -> 0 `i `uc ]
"226
}
[e :U 182 ]
[; ;main.c: 226: }
[; ;main.c: 228: if (datos[i-1] == '\n') {
"228
[e $ ! == -> *U + &U _datos * -> -> - -> _i `i -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 10 `ui 198  ]
{
[; ;main.c: 229: if (datos[6] == '0' && datos[7] == '0') {
"229
[e $ ! && == -> *U + &U _datos * -> -> -> 6 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 48 `ui == -> *U + &U _datos * -> -> -> 7 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 48 `ui 199  ]
{
[; ;main.c: 230: valor = 0;
"230
[e = _valor -> -> 0 `i `ui ]
"231
}
[; ;main.c: 231: } else {
[e $U 200  ]
[e :U 199 ]
{
[; ;main.c: 232: valor = (datos[6] - 48) * 1000 + (datos[7] - 48) * 100 + (datos[8] - 48) * 10 + (datos[9] - 48);
"232
[e = _valor -> + + + * - -> *U + &U _datos * -> -> -> 6 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 1000 `i * - -> *U + &U _datos * -> -> -> 7 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _datos * -> -> -> 8 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 10 `i - -> *U + &U _datos * -> -> -> 9 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i `ui ]
"234
}
[e :U 200 ]
[; ;main.c: 234: }
[; ;main.c: 235: i = 0;
"235
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 236: process = 1;
"236
[e = F1881 -> -> 1 `i `b ]
"237
}
[e :U 198 ]
"238
}
[; ;main.c: 237: }
[; ;main.c: 238: } else {
[e $U 201  ]
[e :U 181 ]
{
[; ;main.c: 239: i = 0;
"239
[e = _i -> -> 0 `i `uc ]
"240
}
[e :U 201 ]
[; ;main.c: 240: }
[; ;main.c: 242: if (datos[0] == '\t') {
"242
[e $ ! == -> *U + &U _datos * -> -> -> 0 `i `ui `ux -> -> # *U &U _datos `ui `ux `ui -> 9 `ui 202  ]
{
[; ;main.c: 243: switch (datos[1]){
"243
[e $U 204  ]
{
[; ;main.c: 244: case 'R':
"244
[e :U 205 ]
[; ;main.c: 245: tempo = 0;
"245
[e = _tempo -> -> 0 `i `ui ]
[; ;main.c: 246: garron = 0;
"246
[e = _garron -> -> 0 `i `ui ]
[; ;main.c: 247: res = 1;
"247
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 248: do {
"248
[e :U 208 ]
{
[; ;main.c: 249: aux = cattle_nr(1, garron);
"249
[e = _aux -> ( _cattle_nr (2 , -> -> 1 `i `uc _garron `uc ]
"250
}
[; ;main.c: 250: } while (aux != 0x10);
[e $ != -> _aux `i -> 16 `i 208  ]
[e :U 207 ]
[; ;main.c: 251: outC = 0xF0;
"251
[e = _outC -> -> 240 `i `uc ]
[; ;main.c: 252: outD = 0xF0;
"252
[e = _outD -> -> 240 `i `uc ]
[; ;main.c: 253: outU = 0xF0;
"253
[e = _outU -> -> 240 `i `uc ]
[; ;main.c: 254: resC = 0x00;
"254
[e = _resC -> -> 0 `i `uc ]
[; ;main.c: 255: resD = 0x00;
"255
[e = _resD -> -> 0 `i `uc ]
[; ;main.c: 256: resU = 0x00;
"256
[e = _resU -> -> 0 `i `uc ]
[; ;main.c: 257: break;
"257
[e $U 203  ]
[; ;main.c: 258: case 'G':
"258
[e :U 209 ]
[; ;main.c: 259: tempo = 0;
"259
[e = _tempo -> -> 0 `i `ui ]
[; ;main.c: 260: timerReset = 0;
"260
[e = _timerReset -> -> 0 `i `ui ]
[; ;main.c: 261: garron = (datos[2] - 48) * 100 + (datos[3] - 48) * 10 + (datos[4] - 48);
"261
[e = _garron -> + + * - -> *U + &U _datos * -> -> -> 2 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 100 `i * - -> *U + &U _datos * -> -> -> 3 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i -> 10 `i - -> *U + &U _datos * -> -> -> 4 `i `ui `ux -> -> # *U &U _datos `ui `ux `i -> 48 `i `ui ]
[; ;main.c: 262: garron = garron << 1;
"262
[e = _garron << _garron -> 1 `i ]
[; ;main.c: 263: res = 1;
"263
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 264: do {
"264
[e :U 212 ]
{
[; ;main.c: 265: aux = cattle_nr(1, garron);
"265
[e = _aux -> ( _cattle_nr (2 , -> -> 1 `i `uc _garron `uc ]
"266
}
[; ;main.c: 266: } while (aux != 0x10);
[e $ != -> _aux `i -> 16 `i 212  ]
[e :U 211 ]
[; ;main.c: 267: lower = garron >> 1;
"267
[e = _lower >> _garron -> 1 `i ]
[; ;main.c: 268: outC = 0;
"268
[e = _outC -> -> 0 `i `uc ]
[; ;main.c: 269: outD = 0;
"269
[e = _outD -> -> 0 `i `uc ]
[; ;main.c: 270: outU = 0;
"270
[e = _outU -> -> 0 `i `uc ]
[; ;main.c: 271: resC = 0;
"271
[e = _resC -> -> 0 `i `uc ]
[; ;main.c: 272: resD = 0;
"272
[e = _resD -> -> 0 `i `uc ]
[; ;main.c: 273: resU = 0;
"273
[e = _resU -> -> 0 `i `uc ]
[; ;main.c: 274: while (lower > 99) {
"274
[e $U 213  ]
[e :U 214 ]
{
[; ;main.c: 275: resC++;
"275
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 276: lower -= 100;
"276
[e =- _lower -> -> 100 `i `ui ]
"277
}
[e :U 213 ]
"274
[e $ > _lower -> -> 99 `i `ui 214  ]
[e :U 215 ]
[; ;main.c: 277: }
[; ;main.c: 278: while (lower > 9) {
"278
[e $U 216  ]
[e :U 217 ]
{
[; ;main.c: 279: resD++;
"279
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 280: lower -= 10;
"280
[e =- _lower -> -> 10 `i `ui ]
"281
}
[e :U 216 ]
"278
[e $ > _lower -> -> 9 `i `ui 217  ]
[e :U 218 ]
[; ;main.c: 281: }
[; ;main.c: 282: resU = lower;
"282
[e = _resU -> _lower `uc ]
[; ;main.c: 283: break;
"283
[e $U 203  ]
"284
}
[; ;main.c: 284: }
[e $U 203  ]
"243
[e :U 204 ]
[e [\ *U + &U _datos * -> -> -> 1 `i `ui `ux -> -> # *U &U _datos `ui `ux , $ -> -> 82 `ui `uc 205
 , $ -> -> 71 `ui `uc 209
 203 ]
"284
[e :U 203 ]
"299
}
[e :U 202 ]
[; ;main.c: 299: }
[; ;main.c: 301: if (process) {
"301
[e $ ! F1881 219  ]
{
[; ;main.c: 303: if (valor > 90 && j < 20) {
"303
[e $ ! && > _valor -> -> 90 `i `ui < -> _j `i -> 20 `i 220  ]
{
[; ;main.c: 304: accuValor += valor;
"304
[e =+ _accuValor _valor ]
[; ;main.c: 305: j++;
"305
[e ++ _j -> -> 1 `i `uc ]
"306
}
[; ;main.c: 306: }
[e $U 221  ]
"307
[e :U 220 ]
[; ;main.c: 307: else if (accuValor > 0 && valor < 90) {
[e $ ! && > _accuValor -> -> 0 `i `ui < _valor -> -> 90 `i `ui 222  ]
{
[; ;main.c: 309: valor = accuValor / (j * 10);
"309
[e = _valor / _accuValor -> * -> _j `i -> 10 `i `ui ]
[; ;main.c: 310: upper = (valor + 1) * j * 10;
"310
[e = _upper * * + _valor -> -> 1 `i `ui -> _j `ui -> -> 10 `i `ui ]
[; ;main.c: 311: lower = valor * j * 10;
"311
[e = _lower * * _valor -> _j `ui -> -> 10 `i `ui ]
[; ;main.c: 315: if ((upper - accuValor) < (accuValor - lower)) {
"315
[e $ ! < - _upper _accuValor - _accuValor _lower 223  ]
{
[; ;main.c: 316: valor++;
"316
[e ++ _valor -> -> 1 `i `ui ]
"317
}
[e :U 223 ]
[; ;main.c: 317: }
[; ;main.c: 319: printf("%03d\n", valor);
"319
[e ( _printf , (. :s 1C _valor ]
[; ;main.c: 322: resC = 0;
"322
[e = _resC -> -> 0 `i `uc ]
[; ;main.c: 323: resD = 0;
"323
[e = _resD -> -> 0 `i `uc ]
[; ;main.c: 324: resU = 0;
"324
[e = _resU -> -> 0 `i `uc ]
[; ;main.c: 325: timerReset = 0;
"325
[e = _timerReset -> -> 0 `i `ui ]
[; ;main.c: 327: if (res) {
"327
[e $ ! != -> _res `i -> -> -> 0 `i `uc `i 224  ]
{
[; ;main.c: 328: res = 0;
"328
[e = _res -> -> 0 `i `uc ]
[; ;main.c: 329: garron++;
"329
[e ++ _garron -> -> 1 `i `ui ]
[; ;main.c: 330: if (valor >= swBot & valor <= swTop) {
"330
[e $ ! & >= _valor -> _swBot `ui <= _valor -> _swTop `ui 225  ]
{
[; ;main.c: 331: PORTCbits.RC0 = 0;
"331
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 332: PORTCbits.RC1 = 1;
"332
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 333: PORTCbits.RC2 = 0;
"333
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"334
}
[; ;main.c: 334: } else {
[e $U 226  ]
[e :U 225 ]
{
[; ;main.c: 335: PORTCbits.RC0 = 0;
"335
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 336: PORTCbits.RC1 = 0;
"336
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 337: PORTCbits.RC2 = 1;
"337
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
"338
}
[e :U 226 ]
[; ;main.c: 338: }
[; ;main.c: 340: lower = valor;
"340
[e = _lower _valor ]
[; ;main.c: 341: while (lower > 99) {
"341
[e $U 227  ]
[e :U 228 ]
{
[; ;main.c: 342: garron_1c++;
"342
[e ++ _garron_1c -> -> 1 `i `uc ]
[; ;main.c: 343: lower -= 100;
"343
[e =- _lower -> -> 100 `i `ui ]
"344
}
[e :U 227 ]
"341
[e $ > _lower -> -> 99 `i `ui 228  ]
[e :U 229 ]
[; ;main.c: 344: }
[; ;main.c: 345: while (lower > 9) {
"345
[e $U 230  ]
[e :U 231 ]
{
[; ;main.c: 346: garron_1d++;
"346
[e ++ _garron_1d -> -> 1 `i `uc ]
[; ;main.c: 347: lower -= 10;
"347
[e =- _lower -> -> 10 `i `ui ]
"348
}
[e :U 230 ]
"345
[e $ > _lower -> -> 9 `i `ui 231  ]
[e :U 232 ]
[; ;main.c: 348: }
[; ;main.c: 349: garron_1u = lower;
"349
[e = _garron_1u -> _lower `uc ]
[; ;main.c: 351: lower = (garron + 1) >> 1;
"351
[e = _lower >> + _garron -> -> 1 `i `ui -> 1 `i ]
[; ;main.c: 352: while (lower > 999) {
"352
[e $U 233  ]
[e :U 234 ]
{
[; ;main.c: 353: lower -= 1000;
"353
[e =- _lower -> -> 1000 `i `ui ]
"354
}
[e :U 233 ]
"352
[e $ > _lower -> -> 999 `i `ui 234  ]
[e :U 235 ]
[; ;main.c: 354: }
[; ;main.c: 355: while (lower > 99) {
"355
[e $U 236  ]
[e :U 237 ]
{
[; ;main.c: 356: resC++;
"356
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 357: lower -= 100;
"357
[e =- _lower -> -> 100 `i `ui ]
"358
}
[e :U 236 ]
"355
[e $ > _lower -> -> 99 `i `ui 237  ]
[e :U 238 ]
[; ;main.c: 358: }
[; ;main.c: 359: while (lower > 9) {
"359
[e $U 239  ]
[e :U 240 ]
{
[; ;main.c: 360: resD++;
"360
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 361: lower -= 10;
"361
[e =- _lower -> -> 10 `i `ui ]
"362
}
[e :U 239 ]
"359
[e $ > _lower -> -> 9 `i `ui 240  ]
[e :U 241 ]
[; ;main.c: 362: }
[; ;main.c: 363: resU = lower;
"363
[e = _resU -> _lower `uc ]
[; ;main.c: 365: outC = garron_1c & 0x0F;
"365
[e = _outC -> & -> _garron_1c `i -> 15 `i `uc ]
[; ;main.c: 366: outD = garron_1d & 0x0F;
"366
[e = _outD -> & -> _garron_1d `i -> 15 `i `uc ]
[; ;main.c: 367: outU = garron_1u & 0x0F;
"367
[e = _outU -> & -> _garron_1u `i -> 15 `i `uc ]
[; ;main.c: 368: PORTAbits.RA6 = 0;
"368
[e = . . _PORTAbits 0 6 -> -> 0 `i `uc ]
"369
}
[; ;main.c: 369: } else {
[e $U 242  ]
[e :U 224 ]
{
[; ;main.c: 370: res = 1;
"370
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 371: tempo = 0;
"371
[e = _tempo -> -> 0 `i `ui ]
[; ;main.c: 372: garron++;
"372
[e ++ _garron -> -> 1 `i `ui ]
[; ;main.c: 373: if (PORTCbits.RC1) {
"373
[e $ ! != -> . . _PORTCbits 0 1 `i -> -> -> 0 `i `Vuc `i 243  ]
{
[; ;main.c: 374: if (valor >= swBot & valor <= swTop) {
"374
[e $ ! & >= _valor -> _swBot `ui <= _valor -> _swTop `ui 244  ]
{
[; ;main.c: 375: PORTCbits.RC0 = 1;
"375
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 376: PORTCbits.RC1 = 0;
"376
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 377: PORTCbits.RC2 = 0;
"377
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"378
}
[; ;main.c: 378: } else {
[e $U 245  ]
[e :U 244 ]
{
[; ;main.c: 379: PORTCbits.RC0 = 0;
"379
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 380: PORTCbits.RC1 = 0;
"380
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 381: PORTCbits.RC2 = 1;
"381
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
"382
}
[e :U 245 ]
"383
}
[e :U 243 ]
[; ;main.c: 382: }
[; ;main.c: 383: }
[; ;main.c: 384: lower = valor;
"384
[e = _lower _valor ]
[; ;main.c: 385: while (lower > 99) {
"385
[e $U 246  ]
[e :U 247 ]
{
[; ;main.c: 386: garron_2c++;
"386
[e ++ _garron_2c -> -> 1 `i `uc ]
[; ;main.c: 387: lower -= 100;
"387
[e =- _lower -> -> 100 `i `ui ]
"388
}
[e :U 246 ]
"385
[e $ > _lower -> -> 99 `i `ui 247  ]
[e :U 248 ]
[; ;main.c: 388: }
[; ;main.c: 389: while (lower > 9) {
"389
[e $U 249  ]
[e :U 250 ]
{
[; ;main.c: 390: garron_2d++;
"390
[e ++ _garron_2d -> -> 1 `i `uc ]
[; ;main.c: 391: lower -= 10;
"391
[e =- _lower -> -> 10 `i `ui ]
"392
}
[e :U 249 ]
"389
[e $ > _lower -> -> 9 `i `ui 250  ]
[e :U 251 ]
[; ;main.c: 392: }
[; ;main.c: 393: garron_2u = lower;
"393
[e = _garron_2u -> _lower `uc ]
[; ;main.c: 395: outC = outC & 0x0F;
"395
[e = _outC -> & -> _outC `i -> 15 `i `uc ]
[; ;main.c: 396: outD = outD & 0x0F;
"396
[e = _outD -> & -> _outD `i -> 15 `i `uc ]
[; ;main.c: 397: outU = outU & 0x0F;
"397
[e = _outU -> & -> _outU `i -> 15 `i `uc ]
[; ;main.c: 399: outC += (garron_2c << 4) & 0xF0;
"399
[e =+ _outC -> & << -> _garron_2c `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 400: outD += (garron_2d << 4) & 0xF0;
"400
[e =+ _outD -> & << -> _garron_2d `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 401: outU += (garron_2u << 4) & 0xF0;
"401
[e =+ _outU -> & << -> _garron_2u `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 403: lower = garron >> 1;
"403
[e = _lower >> _garron -> 1 `i ]
[; ;main.c: 404: while (lower > 999) {
"404
[e $U 252  ]
[e :U 253 ]
{
[; ;main.c: 405: lower -= 1000;
"405
[e =- _lower -> -> 1000 `i `ui ]
"406
}
[e :U 252 ]
"404
[e $ > _lower -> -> 999 `i `ui 253  ]
[e :U 254 ]
[; ;main.c: 406: }
[; ;main.c: 407: while (lower > 99) {
"407
[e $U 255  ]
[e :U 256 ]
{
[; ;main.c: 408: resC++;
"408
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 409: lower -= 100;
"409
[e =- _lower -> -> 100 `i `ui ]
"410
}
[e :U 255 ]
"407
[e $ > _lower -> -> 99 `i `ui 256  ]
[e :U 257 ]
[; ;main.c: 410: }
[; ;main.c: 411: while (lower > 9) {
"411
[e $U 258  ]
[e :U 259 ]
{
[; ;main.c: 412: resD++;
"412
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 413: lower -= 10;
"413
[e =- _lower -> -> 10 `i `ui ]
"414
}
[e :U 258 ]
"411
[e $ > _lower -> -> 9 `i `ui 259  ]
[e :U 260 ]
[; ;main.c: 414: }
[; ;main.c: 415: resU = lower;
"415
[e = _resU -> _lower `uc ]
[; ;main.c: 417: PORTAbits.RA6 = 1;
"417
[e = . . _PORTAbits 0 6 -> -> 1 `i `uc ]
"418
}
[e :U 242 ]
[; ;main.c: 418: }
[; ;main.c: 420: do {
"420
[e :U 263 ]
{
[; ;main.c: 421: aux = cattle_nr(1, garron);
"421
[e = _aux -> ( _cattle_nr (2 , -> -> 1 `i `uc _garron `uc ]
"422
}
[; ;main.c: 422: } while (aux != 0x10);
[e $ != -> _aux `i -> 16 `i 263  ]
[e :U 262 ]
[; ;main.c: 424: accuValor = 0;
"424
[e = _accuValor -> -> 0 `i `ui ]
[; ;main.c: 425: j = 0;
"425
[e = _j -> -> 0 `i `uc ]
"426
}
[e :U 222 ]
"427
[e :U 221 ]
}
[e :U 219 ]
"428
}
[e :U 180 ]
"429
}
[; ;main.c: 426: }
[; ;main.c: 427: }
[; ;main.c: 428: }
[; ;main.c: 429: } else {
[e $U 264  ]
[e :U 179 ]
{
[; ;main.c: 430: drop = RCREG;
"430
[e = _drop _RCREG ]
[; ;main.c: 431: drop = RCREG;
"431
[e = _drop _RCREG ]
[; ;main.c: 432: RCSTAbits.CREN = 0;
"432
[e = . . _RCSTAbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 433: _delay((unsigned long)((100)*(8000000/4000000.0)));
"433
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 434: RCSTAbits.CREN = 1;
"434
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
"435
}
[e :U 264 ]
"436
}
[e :U 175 ]
[; ;main.c: 435: }
[; ;main.c: 436: }
[; ;main.c: 438: if (PIR1bits.TMR2IF) {
"438
[e $ ! != -> . . _PIR1bits 0 1 `i -> -> -> 0 `i `Vuc `i 265  ]
{
"439
[v _lower `ui ~T0 @X0 1 a ]
[; ;main.c: 439: unsigned int lower = 0, aux = 0;
[e = _lower -> -> 0 `i `ui ]
[v _aux `ui ~T0 @X0 1 a ]
[e = _aux -> -> 0 `i `ui ]
[; ;main.c: 442: PIR1bits.TMR2IF = 0;
"442
[e = . . _PIR1bits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 444: digit++;
"444
[e ++ _digit -> -> 1 `i `uc ]
[; ;main.c: 445: if (digit > 3) {
"445
[e $ ! > -> _digit `i -> 3 `i 266  ]
{
[; ;main.c: 446: digit = 1;
"446
[e = _digit -> -> 1 `i `uc ]
"447
}
[e :U 266 ]
[; ;main.c: 447: }
[; ;main.c: 449: tick++;
"449
[e ++ _tick -> -> 1 `i `uc ]
[; ;main.c: 450: if (tick > 199) {
"450
[e $ ! > -> _tick `i -> 199 `i 267  ]
{
[; ;main.c: 451: tick = 0;
"451
[e = _tick -> -> 0 `i `uc ]
[; ;main.c: 452: timerReset++;
"452
[e ++ _timerReset -> -> 1 `i `ui ]
[; ;main.c: 453: if (timerReset > 7199 & timerReset < 7300) {
"453
[e $ ! & > _timerReset -> -> 7199 `i `ui < _timerReset -> -> 7300 `i `ui 268  ]
{
[; ;main.c: 454: timerReset = 7301;
"454
[e = _timerReset -> -> 7301 `i `ui ]
[; ;main.c: 455: garron = 0;
"455
[e = _garron -> -> 0 `i `ui ]
[; ;main.c: 456: do {
"456
[e :U 271 ]
{
[; ;main.c: 457: aux = cattle_nr(1, garron);
"457
[e = _aux ( _cattle_nr (2 , -> -> 1 `i `uc _garron ]
"458
}
[; ;main.c: 458: } while (aux != 0x10);
[e $ != _aux -> -> 16 `i `ui 271  ]
[e :U 270 ]
[; ;main.c: 459: res = 1;
"459
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 460: resC = 0;
"460
[e = _resC -> -> 0 `i `uc ]
[; ;main.c: 461: resD = 0;
"461
[e = _resD -> -> 0 `i `uc ]
[; ;main.c: 462: resU = 0;
"462
[e = _resU -> -> 0 `i `uc ]
[; ;main.c: 463: outC = 0xF0;
"463
[e = _outC -> -> 240 `i `uc ]
[; ;main.c: 464: outD = 0xF0;
"464
[e = _outD -> -> 240 `i `uc ]
[; ;main.c: 465: outU = 0xF0;
"465
[e = _outU -> -> 240 `i `uc ]
[; ;main.c: 466: tempo = 0;
"466
[e = _tempo -> -> 0 `i `ui ]
"467
}
[e :U 268 ]
"468
}
[e :U 267 ]
[; ;main.c: 467: }
[; ;main.c: 468: }
[; ;main.c: 470: if (res & tempo < 1200) {
"470
[e $ ! != & -> _res `i -> < _tempo -> -> 1200 `i `ui `i -> 0 `i 272  ]
{
[; ;main.c: 471: tempo++;
"471
[e ++ _tempo -> -> 1 `i `ui ]
"472
}
[e :U 272 ]
[; ;main.c: 472: }
[; ;main.c: 473: if (tempo > 1199) {
"473
[e $ ! > _tempo -> -> 1199 `i `ui 273  ]
{
[; ;main.c: 474: tempo = 0;
"474
[e = _tempo -> -> 0 `i `ui ]
[; ;main.c: 475: outC = 0xFF;
"475
[e = _outC -> -> 255 `i `uc ]
[; ;main.c: 476: outD = 0xFF;
"476
[e = _outD -> -> 255 `i `uc ]
[; ;main.c: 477: outU = 0xFF;
"477
[e = _outU -> -> 255 `i `uc ]
[; ;main.c: 478: PORTCbits.RC0 = 0;
"478
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 479: PORTCbits.RC1 = 0;
"479
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 480: PORTCbits.RC2 = 0;
"480
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"481
}
[e :U 273 ]
[; ;main.c: 481: }
[; ;main.c: 482: display();
"482
[e ( _display ..  ]
[; ;main.c: 483: if (!PORTAbits.RA4) {
"483
[e $ ! ! != -> . . _PORTAbits 0 4 `i -> -> -> 0 `i `Vuc `i 274  ]
{
[; ;main.c: 484: if (btnUpT < 255) {
"484
[e $ ! < -> _btnUpT `i -> 255 `i 275  ]
{
[; ;main.c: 485: btnUpT++;
"485
[e ++ _btnUpT -> -> 1 `i `uc ]
"486
}
[e :U 275 ]
[; ;main.c: 486: }
[; ;main.c: 487: if (btnUpT > 25) {
"487
[e $ ! > -> _btnUpT `i -> 25 `i 276  ]
{
[; ;main.c: 488: btnUp = 1;
"488
[e = _btnUp -> -> 1 `i `b ]
"489
}
[e :U 276 ]
"490
}
[; ;main.c: 489: }
[; ;main.c: 490: } else if (btnUp && !PIR1bits.RCIF) {
[e $U 277  ]
[e :U 274 ]
[e $ ! && _btnUp ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 278  ]
{
[; ;main.c: 491: tempo = 0;
"491
[e = _tempo -> -> 0 `i `ui ]
[; ;main.c: 492: btnUpT = 0;
"492
[e = _btnUpT -> -> 0 `i `uc ]
[; ;main.c: 493: if (res) {
"493
[e $ ! != -> _res `i -> -> -> 0 `i `uc `i 279  ]
{
[; ;main.c: 494: res = 0;
"494
[e = _res -> -> 0 `i `uc ]
[; ;main.c: 495: outC = (outC >> 4) & 0x0F;
"495
[e = _outC -> & >> -> _outC `i -> 4 `i -> 15 `i `uc ]
[; ;main.c: 496: outD = (outD >> 4) & 0x0F;
"496
[e = _outD -> & >> -> _outD `i -> 4 `i -> 15 `i `uc ]
[; ;main.c: 497: outU = (outU >> 4) & 0x0F;
"497
[e = _outU -> & >> -> _outU `i -> 4 `i -> 15 `i `uc ]
"498
}
[; ;main.c: 498: } else {
[e $U 280  ]
[e :U 279 ]
{
[; ;main.c: 499: res = 1;
"499
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 500: PORTAbits.RA6 = 1;
"500
[e = . . _PORTAbits 0 6 -> -> 1 `i `uc ]
[; ;main.c: 501: outC = (outC << 4) & 0xF0;
"501
[e = _outC -> & << -> _outC `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 502: outD = (outD << 4) & 0xF0;
"502
[e = _outD -> & << -> _outD `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 503: outU = (outU << 4) & 0xF0;
"503
[e = _outU -> & << -> _outU `i -> 4 `i -> 240 `i `uc ]
"504
}
[e :U 280 ]
[; ;main.c: 504: }
[; ;main.c: 506: btnUp = 0;
"506
[e = _btnUp -> -> 0 `i `b ]
[; ;main.c: 507: garron++;
"507
[e ++ _garron -> -> 1 `i `ui ]
[; ;main.c: 508: do {
"508
[e :U 283 ]
{
[; ;main.c: 509: aux = cattle_nr(1, garron);
"509
[e = _aux ( _cattle_nr (2 , -> -> 1 `i `uc _garron ]
"510
}
[; ;main.c: 510: } while (aux != 0x10);
[e $ != _aux -> -> 16 `i `ui 283  ]
[e :U 282 ]
[; ;main.c: 511: if (!PORTAbits.RA5) {
"511
[e $ ! ! != -> . . _PORTAbits 0 5 `i -> -> -> 0 `i `Vuc `i 284  ]
{
[; ;main.c: 512: garron = 0;
"512
[e = _garron -> -> 0 `i `ui ]
[; ;main.c: 513: do {
"513
[e :U 287 ]
{
[; ;main.c: 514: aux = cattle_nr(1, garron);
"514
[e = _aux ( _cattle_nr (2 , -> -> 1 `i `uc _garron ]
"515
}
[; ;main.c: 515: } while (aux != 0x10);
[e $ != _aux -> -> 16 `i `ui 287  ]
[e :U 286 ]
[; ;main.c: 516: garron = 1;
"516
[e = _garron -> -> 1 `i `ui ]
[; ;main.c: 517: reset = 1;
"517
[e = _reset -> -> 1 `i `b ]
"518
}
[e :U 284 ]
[; ;main.c: 518: }
[; ;main.c: 519: if (res) {
"519
[e $ ! != -> _res `i -> -> -> 0 `i `uc `i 288  ]
{
[; ;main.c: 520: lower = (garron + 1) >> 1;
"520
[e = _lower >> + _garron -> -> 1 `i `ui -> 1 `i ]
"521
}
[; ;main.c: 521: } else {
[e $U 289  ]
[e :U 288 ]
{
[; ;main.c: 522: lower = garron >> 1;
"522
[e = _lower >> _garron -> 1 `i ]
"523
}
[e :U 289 ]
[; ;main.c: 523: }
[; ;main.c: 524: resC = 0;
"524
[e = _resC -> -> 0 `i `uc ]
[; ;main.c: 525: resD = 0;
"525
[e = _resD -> -> 0 `i `uc ]
[; ;main.c: 526: resU = 0;
"526
[e = _resU -> -> 0 `i `uc ]
[; ;main.c: 527: while (lower > 999) {
"527
[e $U 290  ]
[e :U 291 ]
{
[; ;main.c: 528: lower -= 1000;
"528
[e =- _lower -> -> 1000 `i `ui ]
"529
}
[e :U 290 ]
"527
[e $ > _lower -> -> 999 `i `ui 291  ]
[e :U 292 ]
[; ;main.c: 529: }
[; ;main.c: 530: while (lower > 99) {
"530
[e $U 293  ]
[e :U 294 ]
{
[; ;main.c: 531: resC++;
"531
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 532: lower -= 100;
"532
[e =- _lower -> -> 100 `i `ui ]
"533
}
[e :U 293 ]
"530
[e $ > _lower -> -> 99 `i `ui 294  ]
[e :U 295 ]
[; ;main.c: 533: }
[; ;main.c: 534: while (lower > 9) {
"534
[e $U 296  ]
[e :U 297 ]
{
[; ;main.c: 535: resD++;
"535
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 536: lower -= 10;
"536
[e =- _lower -> -> 10 `i `ui ]
"537
}
[e :U 296 ]
"534
[e $ > _lower -> -> 9 `i `ui 297  ]
[e :U 298 ]
[; ;main.c: 537: }
[; ;main.c: 538: resU = lower;
"538
[e = _resU -> _lower `uc ]
"541
}
[; ;main.c: 541: } else {
[e $U 299  ]
[e :U 278 ]
{
[; ;main.c: 542: btnUpT = 0;
"542
[e = _btnUpT -> -> 0 `i `uc ]
"543
}
[e :U 299 ]
[e :U 277 ]
[; ;main.c: 543: }
[; ;main.c: 544: if (!PORTAbits.RA5) {
"544
[e $ ! ! != -> . . _PORTAbits 0 5 `i -> -> -> 0 `i `Vuc `i 300  ]
{
[; ;main.c: 545: if (btnDownT < 255) {
"545
[e $ ! < -> _btnDownT `i -> 255 `i 301  ]
{
[; ;main.c: 546: btnDownT++;
"546
[e ++ _btnDownT -> -> 1 `i `uc ]
"547
}
[e :U 301 ]
[; ;main.c: 547: }
[; ;main.c: 548: if (btnDownT > 25) {
"548
[e $ ! > -> _btnDownT `i -> 25 `i 302  ]
{
[; ;main.c: 549: btnDown = 1;
"549
[e = _btnDown -> -> 1 `i `b ]
"550
}
[e :U 302 ]
"551
}
[; ;main.c: 550: }
[; ;main.c: 551: } else if (btnDown && !PIR1bits.RCIF) {
[e $U 303  ]
[e :U 300 ]
[e $ ! && _btnDown ! != -> . . _PIR1bits 0 5 `i -> -> -> 0 `i `Vuc `i 304  ]
{
[; ;main.c: 552: tempo = 0;
"552
[e = _tempo -> -> 0 `i `ui ]
[; ;main.c: 553: btnDown = 0;
"553
[e = _btnDown -> -> 0 `i `b ]
[; ;main.c: 554: if (res) {
"554
[e $ ! != -> _res `i -> -> -> 0 `i `uc `i 305  ]
{
[; ;main.c: 555: res = 0;
"555
[e = _res -> -> 0 `i `uc ]
[; ;main.c: 556: outC = (outC >> 4) & 0x0F;
"556
[e = _outC -> & >> -> _outC `i -> 4 `i -> 15 `i `uc ]
[; ;main.c: 557: outD = (outD >> 4) & 0x0F;
"557
[e = _outD -> & >> -> _outD `i -> 4 `i -> 15 `i `uc ]
[; ;main.c: 558: outU = (outU >> 4) & 0x0F;
"558
[e = _outU -> & >> -> _outU `i -> 4 `i -> 15 `i `uc ]
"559
}
[; ;main.c: 559: } else {
[e $U 306  ]
[e :U 305 ]
{
[; ;main.c: 560: res = 1;
"560
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 561: PORTAbits.RA6 = 1;
"561
[e = . . _PORTAbits 0 6 -> -> 1 `i `uc ]
[; ;main.c: 562: outC = (outC << 4) & 0xF0;
"562
[e = _outC -> & << -> _outC `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 563: outD = (outD << 4) & 0xF0;
"563
[e = _outD -> & << -> _outD `i -> 4 `i -> 240 `i `uc ]
[; ;main.c: 564: outU = (outU << 4) & 0xF0;
"564
[e = _outU -> & << -> _outU `i -> 4 `i -> 240 `i `uc ]
"565
}
[e :U 306 ]
[; ;main.c: 565: }
[; ;main.c: 566: if (reset) {
"566
[e $ ! _reset 307  ]
{
[; ;main.c: 567: res = 1;
"567
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 568: reset = 0;
"568
[e = _reset -> -> 0 `i `b ]
"569
}
[e :U 307 ]
[; ;main.c: 569: }
[; ;main.c: 570: btnDown = 0;
"570
[e = _btnDown -> -> 0 `i `b ]
[; ;main.c: 571: garron--;
"571
[e -- _garron -> -> 1 `i `ui ]
[; ;main.c: 572: do {
"572
[e :U 310 ]
{
[; ;main.c: 573: aux = cattle_nr(1, garron);
"573
[e = _aux ( _cattle_nr (2 , -> -> 1 `i `uc _garron ]
"574
}
[; ;main.c: 574: } while (aux != 0x10);
[e $ != _aux -> -> 16 `i `ui 310  ]
[e :U 309 ]
[; ;main.c: 575: if (res) {
"575
[e $ ! != -> _res `i -> -> -> 0 `i `uc `i 311  ]
{
[; ;main.c: 576: lower = (garron + 1) >> 1;
"576
[e = _lower >> + _garron -> -> 1 `i `ui -> 1 `i ]
"577
}
[; ;main.c: 577: } else {
[e $U 312  ]
[e :U 311 ]
{
[; ;main.c: 578: lower = garron >> 1;
"578
[e = _lower >> _garron -> 1 `i ]
"579
}
[e :U 312 ]
[; ;main.c: 579: }
[; ;main.c: 580: resC = 0;
"580
[e = _resC -> -> 0 `i `uc ]
[; ;main.c: 581: resD = 0;
"581
[e = _resD -> -> 0 `i `uc ]
[; ;main.c: 582: resU = 0;
"582
[e = _resU -> -> 0 `i `uc ]
[; ;main.c: 583: while (lower > 999) {
"583
[e $U 313  ]
[e :U 314 ]
{
[; ;main.c: 584: lower -= 1000;
"584
[e =- _lower -> -> 1000 `i `ui ]
"585
}
[e :U 313 ]
"583
[e $ > _lower -> -> 999 `i `ui 314  ]
[e :U 315 ]
[; ;main.c: 585: }
[; ;main.c: 586: while (lower > 99) {
"586
[e $U 316  ]
[e :U 317 ]
{
[; ;main.c: 587: resC++;
"587
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 588: lower -= 100;
"588
[e =- _lower -> -> 100 `i `ui ]
"589
}
[e :U 316 ]
"586
[e $ > _lower -> -> 99 `i `ui 317  ]
[e :U 318 ]
[; ;main.c: 589: }
[; ;main.c: 590: while (lower > 9) {
"590
[e $U 319  ]
[e :U 320 ]
{
[; ;main.c: 591: resD++;
"591
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 592: lower -= 10;
"592
[e =- _lower -> -> 10 `i `ui ]
"593
}
[e :U 319 ]
"590
[e $ > _lower -> -> 9 `i `ui 320  ]
[e :U 321 ]
[; ;main.c: 593: }
[; ;main.c: 594: resU = lower;
"594
[e = _resU -> _lower `uc ]
"598
}
[; ;main.c: 598: } else {
[e $U 322  ]
[e :U 304 ]
{
[; ;main.c: 599: btnDownT = 0;
"599
[e = _btnDownT -> -> 0 `i `uc ]
"600
}
[e :U 322 ]
[e :U 303 ]
"601
}
[e :U 265 ]
[; ;main.c: 600: }
[; ;main.c: 601: }
[; ;main.c: 602: }
"602
[e :UE 174 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"604
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 604: void main(void) {
[e :U _main ]
[f ]
[; ;main.c: 605: OSCCON = 0b01110001;
"605
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 606: INTCON = 0xC0;
"606
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 607: ANSELH = 0x00;
"607
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main.c: 608: ANSEL = 0x00;
"608
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 609: TRISA = 0x30;
"609
[e = _TRISA -> -> 48 `i `uc ]
[; ;main.c: 610: TRISB = 0x00;
"610
[e = _TRISB -> -> 0 `i `uc ]
[; ;main.c: 611: TRISC = 0x00;
"611
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 612: btnUp = 0;
"612
[e = _btnUp -> -> 0 `i `b ]
[; ;main.c: 613: btnDown = 0;
"613
[e = _btnDown -> -> 0 `i `b ]
[; ;main.c: 614: garron = cattle_nr(0,0x00);
"614
[e = _garron ( _cattle_nr (2 , -> -> 0 `i `uc -> -> 0 `i `ui ]
[; ;main.c: 616: if (garron % 2) {
"616
[e $ ! != % _garron -> -> 2 `i `ui -> -> 0 `i `ui 324  ]
{
[; ;main.c: 617: res = 0;
"617
[e = _res -> -> 0 `i `uc ]
[; ;main.c: 618: mainAux = (garron + 1) >> 1;
"618
[e = _mainAux >> + _garron -> -> 1 `i `ui -> 1 `i ]
[; ;main.c: 619: while (mainAux > 999) {
"619
[e $U 325  ]
[e :U 326 ]
{
[; ;main.c: 620: mainAux -= 1000;
"620
[e =- _mainAux -> -> 1000 `i `ui ]
"621
}
[e :U 325 ]
"619
[e $ > _mainAux -> -> 999 `i `ui 326  ]
[e :U 327 ]
[; ;main.c: 621: }
[; ;main.c: 622: while (mainAux > 99) {
"622
[e $U 328  ]
[e :U 329 ]
{
[; ;main.c: 623: resC++;
"623
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 624: mainAux -= 100;
"624
[e =- _mainAux -> -> 100 `i `ui ]
"625
}
[e :U 328 ]
"622
[e $ > _mainAux -> -> 99 `i `ui 329  ]
[e :U 330 ]
[; ;main.c: 625: }
[; ;main.c: 626: while (mainAux > 9) {
"626
[e $U 331  ]
[e :U 332 ]
{
[; ;main.c: 627: resD++;
"627
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 628: mainAux -= 10;
"628
[e =- _mainAux -> -> 10 `i `ui ]
"629
}
[e :U 331 ]
"626
[e $ > _mainAux -> -> 9 `i `ui 332  ]
[e :U 333 ]
[; ;main.c: 629: }
[; ;main.c: 630: resU = mainAux;
"630
[e = _resU -> _mainAux `uc ]
[; ;main.c: 631: outC = 0x0F;
"631
[e = _outC -> -> 15 `i `uc ]
[; ;main.c: 632: outD = 0x0F;
"632
[e = _outD -> -> 15 `i `uc ]
[; ;main.c: 633: outU = 0x0F;
"633
[e = _outU -> -> 15 `i `uc ]
[; ;main.c: 634: PORTAbits.RA6 = 1;
"634
[e = . . _PORTAbits 0 6 -> -> 1 `i `uc ]
[; ;main.c: 635: PORTCbits.RC0 = 0;
"635
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 636: PORTCbits.RC1 = 0;
"636
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 637: PORTCbits.RC2 = 1;
"637
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
"638
}
[; ;main.c: 638: } else {
[e $U 334  ]
[e :U 324 ]
{
[; ;main.c: 639: res = 1;
"639
[e = _res -> -> 1 `i `uc ]
[; ;main.c: 640: PORTAbits.RA6 = 0;
"640
[e = . . _PORTAbits 0 6 -> -> 0 `i `uc ]
[; ;main.c: 641: mainAux = garron >> 1;
"641
[e = _mainAux >> _garron -> 1 `i ]
[; ;main.c: 642: while (mainAux > 999) {
"642
[e $U 335  ]
[e :U 336 ]
{
[; ;main.c: 643: mainAux -= 1000;
"643
[e =- _mainAux -> -> 1000 `i `ui ]
"644
}
[e :U 335 ]
"642
[e $ > _mainAux -> -> 999 `i `ui 336  ]
[e :U 337 ]
[; ;main.c: 644: }
[; ;main.c: 645: while (mainAux > 99) {
"645
[e $U 338  ]
[e :U 339 ]
{
[; ;main.c: 646: resC++;
"646
[e ++ _resC -> -> 1 `i `uc ]
[; ;main.c: 647: mainAux -= 100;
"647
[e =- _mainAux -> -> 100 `i `ui ]
"648
}
[e :U 338 ]
"645
[e $ > _mainAux -> -> 99 `i `ui 339  ]
[e :U 340 ]
[; ;main.c: 648: }
[; ;main.c: 649: while (mainAux > 9) {
"649
[e $U 341  ]
[e :U 342 ]
{
[; ;main.c: 650: resD++;
"650
[e ++ _resD -> -> 1 `i `uc ]
[; ;main.c: 651: mainAux -= 10;
"651
[e =- _mainAux -> -> 10 `i `ui ]
"652
}
[e :U 341 ]
"649
[e $ > _mainAux -> -> 9 `i `ui 342  ]
[e :U 343 ]
[; ;main.c: 652: }
[; ;main.c: 653: resU = mainAux;
"653
[e = _resU -> _mainAux `uc ]
[; ;main.c: 654: PORTCbits.RC0 = 0;
"654
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 655: PORTCbits.RC1 = 1;
"655
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 656: PORTCbits.RC2 = 0;
"656
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"657
}
[e :U 334 ]
[; ;main.c: 657: }
[; ;main.c: 658: reset = 0;
"658
[e = _reset -> -> 0 `i `b ]
[; ;main.c: 659: init_timer2(2, 5, 125);
"659
[e ( _init_timer2 (3 , , -> -> 2 `i `uc -> -> 5 `i `uc -> -> 125 `i `uc ]
[; ;main.c: 660: uart_init();
"660
[e ( _uart_init ..  ]
[; ;main.c: 661: while(1){}
"661
[e :U 345 ]
{
}
[e :U 344 ]
[e $U 345  ]
[e :U 346 ]
[; ;main.c: 662: }
"662
[e :UE 323 ]
}
[p f _printf 8421508 ]
[a 1C 37 48 51 100 10 0 ]

